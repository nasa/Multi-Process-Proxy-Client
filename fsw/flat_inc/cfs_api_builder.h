#ifndef CFS_API_BUILDER_H
#define CFS_API_BUILDER_H

/* Generated by flatcc 0.6.0-pre FlatBuffers schema compiler for C by dvide.com */

#ifndef CFS_API_READER_H
#include "cfs_api_reader.h"
#endif
#ifndef FLATBUFFERS_COMMON_BUILDER_H
#include "flatbuffers_common_builder.h"
#endif
#ifndef COMMON_BUILDER_H
#include "common_builder.h"
#endif
#include "flatcc/flatcc_prologue.h"
#ifndef flatbuffers_identifier
#define flatbuffers_identifier 0
#endif
#ifndef flatbuffers_extension
#define flatbuffers_extension ".bin"
#endif

typedef flatbuffers_union_ref_t cFS_API_Function_union_ref_t;
typedef flatbuffers_union_vec_ref_t cFS_API_Function_union_vec_ref_t;
static cFS_API_Function_union_ref_t cFS_API_Function_clone(flatbuffers_builder_t *B, cFS_API_Function_union_t t);

static const flatbuffers_voffset_t __cFS_API_RunLoop_required[] = { 0 };
typedef flatbuffers_ref_t cFS_API_RunLoop_ref_t;
static cFS_API_RunLoop_ref_t cFS_API_RunLoop_clone(flatbuffers_builder_t *B, cFS_API_RunLoop_table_t t);
__flatbuffers_build_table(flatbuffers_, cFS_API_RunLoop, 1)

static const flatbuffers_voffset_t __cFS_API_PerfLogAdd_required[] = { 0 };
typedef flatbuffers_ref_t cFS_API_PerfLogAdd_ref_t;
static cFS_API_PerfLogAdd_ref_t cFS_API_PerfLogAdd_clone(flatbuffers_builder_t *B, cFS_API_PerfLogAdd_table_t t);
__flatbuffers_build_table(flatbuffers_, cFS_API_PerfLogAdd, 2)

static const flatbuffers_voffset_t __cFS_API_RegisterApp_required[] = { 0 };
typedef flatbuffers_ref_t cFS_API_RegisterApp_ref_t;
static cFS_API_RegisterApp_ref_t cFS_API_RegisterApp_clone(flatbuffers_builder_t *B, cFS_API_RegisterApp_table_t t);
__flatbuffers_build_table(flatbuffers_, cFS_API_RegisterApp, 0)

static const flatbuffers_voffset_t __cFS_API_ExitApp_required[] = { 0 };
typedef flatbuffers_ref_t cFS_API_ExitApp_ref_t;
static cFS_API_ExitApp_ref_t cFS_API_ExitApp_clone(flatbuffers_builder_t *B, cFS_API_ExitApp_table_t t);
__flatbuffers_build_table(flatbuffers_, cFS_API_ExitApp, 1)

static const flatbuffers_voffset_t __cFS_API_SendEvent_required[] = { 0 };
typedef flatbuffers_ref_t cFS_API_SendEvent_ref_t;
static cFS_API_SendEvent_ref_t cFS_API_SendEvent_clone(flatbuffers_builder_t *B, cFS_API_SendEvent_table_t t);
__flatbuffers_build_table(flatbuffers_, cFS_API_SendEvent, 3)

static const flatbuffers_voffset_t __cFS_API_SendEventWithAppID_required[] = { 0 };
typedef flatbuffers_ref_t cFS_API_SendEventWithAppID_ref_t;
static cFS_API_SendEventWithAppID_ref_t cFS_API_SendEventWithAppID_clone(flatbuffers_builder_t *B, cFS_API_SendEventWithAppID_table_t t);
__flatbuffers_build_table(flatbuffers_, cFS_API_SendEventWithAppID, 4)

static const flatbuffers_voffset_t __cFS_API_SendTimedEvent_required[] = { 0 };
typedef flatbuffers_ref_t cFS_API_SendTimedEvent_ref_t;
static cFS_API_SendTimedEvent_ref_t cFS_API_SendTimedEvent_clone(flatbuffers_builder_t *B, cFS_API_SendTimedEvent_table_t t);
__flatbuffers_build_table(flatbuffers_, cFS_API_SendTimedEvent, 4)

static const flatbuffers_voffset_t __cFS_API_Filter_required[] = { 0 };
typedef flatbuffers_ref_t cFS_API_Filter_ref_t;
static cFS_API_Filter_ref_t cFS_API_Filter_clone(flatbuffers_builder_t *B, cFS_API_Filter_table_t t);
__flatbuffers_build_table(flatbuffers_, cFS_API_Filter, 2)

static const flatbuffers_voffset_t __cFS_API_Register_required[] = { 0 };
typedef flatbuffers_ref_t cFS_API_Register_ref_t;
static cFS_API_Register_ref_t cFS_API_Register_clone(flatbuffers_builder_t *B, cFS_API_Register_table_t t);
__flatbuffers_build_table(flatbuffers_, cFS_API_Register, 3)

static const flatbuffers_voffset_t __cFS_API_Unregister_required[] = { 0 };
typedef flatbuffers_ref_t cFS_API_Unregister_ref_t;
static cFS_API_Unregister_ref_t cFS_API_Unregister_clone(flatbuffers_builder_t *B, cFS_API_Unregister_table_t t);
__flatbuffers_build_table(flatbuffers_, cFS_API_Unregister, 0)

static const flatbuffers_voffset_t __cFS_API_ResetFilter_required[] = { 0 };
typedef flatbuffers_ref_t cFS_API_ResetFilter_ref_t;
static cFS_API_ResetFilter_ref_t cFS_API_ResetFilter_clone(flatbuffers_builder_t *B, cFS_API_ResetFilter_table_t t);
__flatbuffers_build_table(flatbuffers_, cFS_API_ResetFilter, 1)

static const flatbuffers_voffset_t __cFS_API_ResetAllFilters_required[] = { 0 };
typedef flatbuffers_ref_t cFS_API_ResetAllFilters_ref_t;
static cFS_API_ResetAllFilters_ref_t cFS_API_ResetAllFilters_clone(flatbuffers_builder_t *B, cFS_API_ResetAllFilters_table_t t);
__flatbuffers_build_table(flatbuffers_, cFS_API_ResetAllFilters, 0)

static const flatbuffers_voffset_t __cFS_API_FS_Header_t_required[] = { 0 };
typedef flatbuffers_ref_t cFS_API_FS_Header_t_ref_t;
static cFS_API_FS_Header_t_ref_t cFS_API_FS_Header_t_clone(flatbuffers_builder_t *B, cFS_API_FS_Header_t_table_t t);
__flatbuffers_build_table(flatbuffers_, cFS_API_FS_Header_t, 9)

static const flatbuffers_voffset_t __cFS_API_FS_ReadHeader_required[] = { 0 };
typedef flatbuffers_ref_t cFS_API_FS_ReadHeader_ref_t;
static cFS_API_FS_ReadHeader_ref_t cFS_API_FS_ReadHeader_clone(flatbuffers_builder_t *B, cFS_API_FS_ReadHeader_table_t t);
__flatbuffers_build_table(flatbuffers_, cFS_API_FS_ReadHeader, 2)

static const flatbuffers_voffset_t __cFS_API_FS_WriteHeader_required[] = { 0 };
typedef flatbuffers_ref_t cFS_API_FS_WriteHeader_ref_t;
static cFS_API_FS_WriteHeader_ref_t cFS_API_FS_WriteHeader_clone(flatbuffers_builder_t *B, cFS_API_FS_WriteHeader_table_t t);
__flatbuffers_build_table(flatbuffers_, cFS_API_FS_WriteHeader, 2)

static const flatbuffers_voffset_t __cFS_API_FS_SetTimestamp_required[] = { 0 };
typedef flatbuffers_ref_t cFS_API_FS_SetTimestamp_ref_t;
static cFS_API_FS_SetTimestamp_ref_t cFS_API_FS_SetTimestamp_clone(flatbuffers_builder_t *B, cFS_API_FS_SetTimestamp_table_t t);
__flatbuffers_build_table(flatbuffers_, cFS_API_FS_SetTimestamp, 2)

static const flatbuffers_voffset_t __cFS_API_FS_Decompress_required[] = { 0 };
typedef flatbuffers_ref_t cFS_API_FS_Decompress_ref_t;
static cFS_API_FS_Decompress_ref_t cFS_API_FS_Decompress_clone(flatbuffers_builder_t *B, cFS_API_FS_Decompress_table_t t);
__flatbuffers_build_table(flatbuffers_, cFS_API_FS_Decompress, 2)

static const flatbuffers_voffset_t __cFS_API_FS_GetUncompressedFile_required[] = { 0 };
typedef flatbuffers_ref_t cFS_API_FS_GetUncompressedFile_ref_t;
static cFS_API_FS_GetUncompressedFile_ref_t cFS_API_FS_GetUncompressedFile_clone(flatbuffers_builder_t *B, cFS_API_FS_GetUncompressedFile_table_t t);
__flatbuffers_build_table(flatbuffers_, cFS_API_FS_GetUncompressedFile, 4)

static const flatbuffers_voffset_t __cFS_API_TIME_GetTime_required[] = { 0 };
typedef flatbuffers_ref_t cFS_API_TIME_GetTime_ref_t;
static cFS_API_TIME_GetTime_ref_t cFS_API_TIME_GetTime_clone(flatbuffers_builder_t *B, cFS_API_TIME_GetTime_table_t t);
__flatbuffers_build_table(flatbuffers_, cFS_API_TIME_GetTime, 0)

static const flatbuffers_voffset_t __cFS_API_TIME_GetTAI_required[] = { 0 };
typedef flatbuffers_ref_t cFS_API_TIME_GetTAI_ref_t;
static cFS_API_TIME_GetTAI_ref_t cFS_API_TIME_GetTAI_clone(flatbuffers_builder_t *B, cFS_API_TIME_GetTAI_table_t t);
__flatbuffers_build_table(flatbuffers_, cFS_API_TIME_GetTAI, 0)

static const flatbuffers_voffset_t __cFS_API_TIME_GetUTC_required[] = { 0 };
typedef flatbuffers_ref_t cFS_API_TIME_GetUTC_ref_t;
static cFS_API_TIME_GetUTC_ref_t cFS_API_TIME_GetUTC_clone(flatbuffers_builder_t *B, cFS_API_TIME_GetUTC_table_t t);
__flatbuffers_build_table(flatbuffers_, cFS_API_TIME_GetUTC, 0)

static const flatbuffers_voffset_t __cFS_API_TIME_MET2SCTime_required[] = { 0 };
typedef flatbuffers_ref_t cFS_API_TIME_MET2SCTime_ref_t;
static cFS_API_TIME_MET2SCTime_ref_t cFS_API_TIME_MET2SCTime_clone(flatbuffers_builder_t *B, cFS_API_TIME_MET2SCTime_table_t t);
__flatbuffers_build_table(flatbuffers_, cFS_API_TIME_MET2SCTime, 1)

static const flatbuffers_voffset_t __cFS_API_TIME_GetSTCF_required[] = { 0 };
typedef flatbuffers_ref_t cFS_API_TIME_GetSTCF_ref_t;
static cFS_API_TIME_GetSTCF_ref_t cFS_API_TIME_GetSTCF_clone(flatbuffers_builder_t *B, cFS_API_TIME_GetSTCF_table_t t);
__flatbuffers_build_table(flatbuffers_, cFS_API_TIME_GetSTCF, 0)

static const flatbuffers_voffset_t __cFS_API_TIME_GetMET_required[] = { 0 };
typedef flatbuffers_ref_t cFS_API_TIME_GetMET_ref_t;
static cFS_API_TIME_GetMET_ref_t cFS_API_TIME_GetMET_clone(flatbuffers_builder_t *B, cFS_API_TIME_GetMET_table_t t);
__flatbuffers_build_table(flatbuffers_, cFS_API_TIME_GetMET, 0)

static const flatbuffers_voffset_t __cFS_API_TIME_GetMETseconds_required[] = { 0 };
typedef flatbuffers_ref_t cFS_API_TIME_GetMETseconds_ref_t;
static cFS_API_TIME_GetMETseconds_ref_t cFS_API_TIME_GetMETseconds_clone(flatbuffers_builder_t *B, cFS_API_TIME_GetMETseconds_table_t t);
__flatbuffers_build_table(flatbuffers_, cFS_API_TIME_GetMETseconds, 0)

static const flatbuffers_voffset_t __cFS_API_TIME_GetMETsubsecs_required[] = { 0 };
typedef flatbuffers_ref_t cFS_API_TIME_GetMETsubsecs_ref_t;
static cFS_API_TIME_GetMETsubsecs_ref_t cFS_API_TIME_GetMETsubsecs_clone(flatbuffers_builder_t *B, cFS_API_TIME_GetMETsubsecs_table_t t);
__flatbuffers_build_table(flatbuffers_, cFS_API_TIME_GetMETsubsecs, 0)

static const flatbuffers_voffset_t __cFS_API_TIME_GetLeapSeconds_required[] = { 0 };
typedef flatbuffers_ref_t cFS_API_TIME_GetLeapSeconds_ref_t;
static cFS_API_TIME_GetLeapSeconds_ref_t cFS_API_TIME_GetLeapSeconds_clone(flatbuffers_builder_t *B, cFS_API_TIME_GetLeapSeconds_table_t t);
__flatbuffers_build_table(flatbuffers_, cFS_API_TIME_GetLeapSeconds, 0)

static const flatbuffers_voffset_t __cFS_API_TIME_GetClockState_required[] = { 0 };
typedef flatbuffers_ref_t cFS_API_TIME_GetClockState_ref_t;
static cFS_API_TIME_GetClockState_ref_t cFS_API_TIME_GetClockState_clone(flatbuffers_builder_t *B, cFS_API_TIME_GetClockState_table_t t);
__flatbuffers_build_table(flatbuffers_, cFS_API_TIME_GetClockState, 0)

static const flatbuffers_voffset_t __cFS_API_TIME_GetClockInfo_required[] = { 0 };
typedef flatbuffers_ref_t cFS_API_TIME_GetClockInfo_ref_t;
static cFS_API_TIME_GetClockInfo_ref_t cFS_API_TIME_GetClockInfo_clone(flatbuffers_builder_t *B, cFS_API_TIME_GetClockInfo_table_t t);
__flatbuffers_build_table(flatbuffers_, cFS_API_TIME_GetClockInfo, 0)

static const flatbuffers_voffset_t __cFS_API_RemoteCall_required[] = { 0 };
typedef flatbuffers_ref_t cFS_API_RemoteCall_ref_t;
static cFS_API_RemoteCall_ref_t cFS_API_RemoteCall_clone(flatbuffers_builder_t *B, cFS_API_RemoteCall_table_t t);
__flatbuffers_build_table(flatbuffers_, cFS_API_RemoteCall, 2)

#define __cFS_API_RunLoop_formal_args , uint32_t v0
#define __cFS_API_RunLoop_call_args , v0
static inline cFS_API_RunLoop_ref_t cFS_API_RunLoop_create(flatbuffers_builder_t *B __cFS_API_RunLoop_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, cFS_API_RunLoop, cFS_API_RunLoop_identifier, cFS_API_RunLoop_type_identifier)

#define __cFS_API_PerfLogAdd_formal_args , uint32_t v0, uint32_t v1
#define __cFS_API_PerfLogAdd_call_args , v0, v1
static inline cFS_API_PerfLogAdd_ref_t cFS_API_PerfLogAdd_create(flatbuffers_builder_t *B __cFS_API_PerfLogAdd_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, cFS_API_PerfLogAdd, cFS_API_PerfLogAdd_identifier, cFS_API_PerfLogAdd_type_identifier)

#define __cFS_API_RegisterApp_formal_args 
#define __cFS_API_RegisterApp_call_args 
static inline cFS_API_RegisterApp_ref_t cFS_API_RegisterApp_create(flatbuffers_builder_t *B __cFS_API_RegisterApp_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, cFS_API_RegisterApp, cFS_API_RegisterApp_identifier, cFS_API_RegisterApp_type_identifier)

#define __cFS_API_ExitApp_formal_args , uint32_t v0
#define __cFS_API_ExitApp_call_args , v0
static inline cFS_API_ExitApp_ref_t cFS_API_ExitApp_create(flatbuffers_builder_t *B __cFS_API_ExitApp_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, cFS_API_ExitApp, cFS_API_ExitApp_identifier, cFS_API_ExitApp_type_identifier)

#define __cFS_API_SendEvent_formal_args , uint16_t v0, uint16_t v1, flatbuffers_string_ref_t v2
#define __cFS_API_SendEvent_call_args , v0, v1, v2
static inline cFS_API_SendEvent_ref_t cFS_API_SendEvent_create(flatbuffers_builder_t *B __cFS_API_SendEvent_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, cFS_API_SendEvent, cFS_API_SendEvent_identifier, cFS_API_SendEvent_type_identifier)

#define __cFS_API_SendEventWithAppID_formal_args , uint16_t v0, uint16_t v1, uint32_t v2, flatbuffers_string_ref_t v3
#define __cFS_API_SendEventWithAppID_call_args , v0, v1, v2, v3
static inline cFS_API_SendEventWithAppID_ref_t cFS_API_SendEventWithAppID_create(flatbuffers_builder_t *B __cFS_API_SendEventWithAppID_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, cFS_API_SendEventWithAppID, cFS_API_SendEventWithAppID_identifier, cFS_API_SendEventWithAppID_type_identifier)

#define __cFS_API_SendTimedEvent_formal_args , cFETime_ref_t v0, uint16_t v1, uint16_t v2, flatbuffers_string_ref_t v3
#define __cFS_API_SendTimedEvent_call_args , v0, v1, v2, v3
static inline cFS_API_SendTimedEvent_ref_t cFS_API_SendTimedEvent_create(flatbuffers_builder_t *B __cFS_API_SendTimedEvent_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, cFS_API_SendTimedEvent, cFS_API_SendTimedEvent_identifier, cFS_API_SendTimedEvent_type_identifier)

#define __cFS_API_Filter_formal_args , uint16_t v0, uint16_t v1
#define __cFS_API_Filter_call_args , v0, v1
static inline cFS_API_Filter_ref_t cFS_API_Filter_create(flatbuffers_builder_t *B __cFS_API_Filter_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, cFS_API_Filter, cFS_API_Filter_identifier, cFS_API_Filter_type_identifier)

#define __cFS_API_Register_formal_args , cFS_API_Filter_vec_ref_t v0, uint16_t v1, uint16_t v2
#define __cFS_API_Register_call_args , v0, v1, v2
static inline cFS_API_Register_ref_t cFS_API_Register_create(flatbuffers_builder_t *B __cFS_API_Register_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, cFS_API_Register, cFS_API_Register_identifier, cFS_API_Register_type_identifier)

#define __cFS_API_Unregister_formal_args 
#define __cFS_API_Unregister_call_args 
static inline cFS_API_Unregister_ref_t cFS_API_Unregister_create(flatbuffers_builder_t *B __cFS_API_Unregister_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, cFS_API_Unregister, cFS_API_Unregister_identifier, cFS_API_Unregister_type_identifier)

#define __cFS_API_ResetFilter_formal_args , int16_t v0
#define __cFS_API_ResetFilter_call_args , v0
static inline cFS_API_ResetFilter_ref_t cFS_API_ResetFilter_create(flatbuffers_builder_t *B __cFS_API_ResetFilter_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, cFS_API_ResetFilter, cFS_API_ResetFilter_identifier, cFS_API_ResetFilter_type_identifier)

#define __cFS_API_ResetAllFilters_formal_args 
#define __cFS_API_ResetAllFilters_call_args 
static inline cFS_API_ResetAllFilters_ref_t cFS_API_ResetAllFilters_create(flatbuffers_builder_t *B __cFS_API_ResetAllFilters_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, cFS_API_ResetAllFilters, cFS_API_ResetAllFilters_identifier, cFS_API_ResetAllFilters_type_identifier)

#define __cFS_API_FS_Header_t_formal_args ,\
  uint32_t v0, uint32_t v1, uint32_t v2, uint32_t v3,\
  uint32_t v4, uint32_t v5, uint32_t v6, uint32_t v7, flatbuffers_string_ref_t v8
#define __cFS_API_FS_Header_t_call_args ,\
  v0, v1, v2, v3,\
  v4, v5, v6, v7, v8
static inline cFS_API_FS_Header_t_ref_t cFS_API_FS_Header_t_create(flatbuffers_builder_t *B __cFS_API_FS_Header_t_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, cFS_API_FS_Header_t, cFS_API_FS_Header_t_identifier, cFS_API_FS_Header_t_type_identifier)

#define __cFS_API_FS_ReadHeader_formal_args , cFS_API_FS_Header_t_ref_t v0, int32_t v1
#define __cFS_API_FS_ReadHeader_call_args , v0, v1
static inline cFS_API_FS_ReadHeader_ref_t cFS_API_FS_ReadHeader_create(flatbuffers_builder_t *B __cFS_API_FS_ReadHeader_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, cFS_API_FS_ReadHeader, cFS_API_FS_ReadHeader_identifier, cFS_API_FS_ReadHeader_type_identifier)

#define __cFS_API_FS_WriteHeader_formal_args , int32_t v0, cFS_API_FS_Header_t_ref_t v1
#define __cFS_API_FS_WriteHeader_call_args , v0, v1
static inline cFS_API_FS_WriteHeader_ref_t cFS_API_FS_WriteHeader_create(flatbuffers_builder_t *B __cFS_API_FS_WriteHeader_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, cFS_API_FS_WriteHeader, cFS_API_FS_WriteHeader_identifier, cFS_API_FS_WriteHeader_type_identifier)

#define __cFS_API_FS_SetTimestamp_formal_args , int32_t v0, cFETime_ref_t v1
#define __cFS_API_FS_SetTimestamp_call_args , v0, v1
static inline cFS_API_FS_SetTimestamp_ref_t cFS_API_FS_SetTimestamp_create(flatbuffers_builder_t *B __cFS_API_FS_SetTimestamp_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, cFS_API_FS_SetTimestamp, cFS_API_FS_SetTimestamp_identifier, cFS_API_FS_SetTimestamp_type_identifier)

#define __cFS_API_FS_Decompress_formal_args , flatbuffers_string_ref_t v0, flatbuffers_string_ref_t v1
#define __cFS_API_FS_Decompress_call_args , v0, v1
static inline cFS_API_FS_Decompress_ref_t cFS_API_FS_Decompress_create(flatbuffers_builder_t *B __cFS_API_FS_Decompress_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, cFS_API_FS_Decompress, cFS_API_FS_Decompress_identifier, cFS_API_FS_Decompress_type_identifier)

#define __cFS_API_FS_GetUncompressedFile_formal_args , flatbuffers_string_ref_t v0, uint32_t v1, flatbuffers_string_ref_t v2, flatbuffers_string_ref_t v3
#define __cFS_API_FS_GetUncompressedFile_call_args , v0, v1, v2, v3
static inline cFS_API_FS_GetUncompressedFile_ref_t cFS_API_FS_GetUncompressedFile_create(flatbuffers_builder_t *B __cFS_API_FS_GetUncompressedFile_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, cFS_API_FS_GetUncompressedFile, cFS_API_FS_GetUncompressedFile_identifier, cFS_API_FS_GetUncompressedFile_type_identifier)

#define __cFS_API_TIME_GetTime_formal_args 
#define __cFS_API_TIME_GetTime_call_args 
static inline cFS_API_TIME_GetTime_ref_t cFS_API_TIME_GetTime_create(flatbuffers_builder_t *B __cFS_API_TIME_GetTime_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, cFS_API_TIME_GetTime, cFS_API_TIME_GetTime_identifier, cFS_API_TIME_GetTime_type_identifier)

#define __cFS_API_TIME_GetTAI_formal_args 
#define __cFS_API_TIME_GetTAI_call_args 
static inline cFS_API_TIME_GetTAI_ref_t cFS_API_TIME_GetTAI_create(flatbuffers_builder_t *B __cFS_API_TIME_GetTAI_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, cFS_API_TIME_GetTAI, cFS_API_TIME_GetTAI_identifier, cFS_API_TIME_GetTAI_type_identifier)

#define __cFS_API_TIME_GetUTC_formal_args 
#define __cFS_API_TIME_GetUTC_call_args 
static inline cFS_API_TIME_GetUTC_ref_t cFS_API_TIME_GetUTC_create(flatbuffers_builder_t *B __cFS_API_TIME_GetUTC_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, cFS_API_TIME_GetUTC, cFS_API_TIME_GetUTC_identifier, cFS_API_TIME_GetUTC_type_identifier)

#define __cFS_API_TIME_MET2SCTime_formal_args , cFETime_ref_t v0
#define __cFS_API_TIME_MET2SCTime_call_args , v0
static inline cFS_API_TIME_MET2SCTime_ref_t cFS_API_TIME_MET2SCTime_create(flatbuffers_builder_t *B __cFS_API_TIME_MET2SCTime_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, cFS_API_TIME_MET2SCTime, cFS_API_TIME_MET2SCTime_identifier, cFS_API_TIME_MET2SCTime_type_identifier)

#define __cFS_API_TIME_GetSTCF_formal_args 
#define __cFS_API_TIME_GetSTCF_call_args 
static inline cFS_API_TIME_GetSTCF_ref_t cFS_API_TIME_GetSTCF_create(flatbuffers_builder_t *B __cFS_API_TIME_GetSTCF_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, cFS_API_TIME_GetSTCF, cFS_API_TIME_GetSTCF_identifier, cFS_API_TIME_GetSTCF_type_identifier)

#define __cFS_API_TIME_GetMET_formal_args 
#define __cFS_API_TIME_GetMET_call_args 
static inline cFS_API_TIME_GetMET_ref_t cFS_API_TIME_GetMET_create(flatbuffers_builder_t *B __cFS_API_TIME_GetMET_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, cFS_API_TIME_GetMET, cFS_API_TIME_GetMET_identifier, cFS_API_TIME_GetMET_type_identifier)

#define __cFS_API_TIME_GetMETseconds_formal_args 
#define __cFS_API_TIME_GetMETseconds_call_args 
static inline cFS_API_TIME_GetMETseconds_ref_t cFS_API_TIME_GetMETseconds_create(flatbuffers_builder_t *B __cFS_API_TIME_GetMETseconds_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, cFS_API_TIME_GetMETseconds, cFS_API_TIME_GetMETseconds_identifier, cFS_API_TIME_GetMETseconds_type_identifier)

#define __cFS_API_TIME_GetMETsubsecs_formal_args 
#define __cFS_API_TIME_GetMETsubsecs_call_args 
static inline cFS_API_TIME_GetMETsubsecs_ref_t cFS_API_TIME_GetMETsubsecs_create(flatbuffers_builder_t *B __cFS_API_TIME_GetMETsubsecs_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, cFS_API_TIME_GetMETsubsecs, cFS_API_TIME_GetMETsubsecs_identifier, cFS_API_TIME_GetMETsubsecs_type_identifier)

#define __cFS_API_TIME_GetLeapSeconds_formal_args 
#define __cFS_API_TIME_GetLeapSeconds_call_args 
static inline cFS_API_TIME_GetLeapSeconds_ref_t cFS_API_TIME_GetLeapSeconds_create(flatbuffers_builder_t *B __cFS_API_TIME_GetLeapSeconds_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, cFS_API_TIME_GetLeapSeconds, cFS_API_TIME_GetLeapSeconds_identifier, cFS_API_TIME_GetLeapSeconds_type_identifier)

#define __cFS_API_TIME_GetClockState_formal_args 
#define __cFS_API_TIME_GetClockState_call_args 
static inline cFS_API_TIME_GetClockState_ref_t cFS_API_TIME_GetClockState_create(flatbuffers_builder_t *B __cFS_API_TIME_GetClockState_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, cFS_API_TIME_GetClockState, cFS_API_TIME_GetClockState_identifier, cFS_API_TIME_GetClockState_type_identifier)

#define __cFS_API_TIME_GetClockInfo_formal_args 
#define __cFS_API_TIME_GetClockInfo_call_args 
static inline cFS_API_TIME_GetClockInfo_ref_t cFS_API_TIME_GetClockInfo_create(flatbuffers_builder_t *B __cFS_API_TIME_GetClockInfo_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, cFS_API_TIME_GetClockInfo, cFS_API_TIME_GetClockInfo_identifier, cFS_API_TIME_GetClockInfo_type_identifier)

#define __cFS_API_RemoteCall_formal_args , cFS_API_Function_union_ref_t v1
#define __cFS_API_RemoteCall_call_args , v1
static inline cFS_API_RemoteCall_ref_t cFS_API_RemoteCall_create(flatbuffers_builder_t *B __cFS_API_RemoteCall_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, cFS_API_RemoteCall, cFS_API_RemoteCall_identifier, cFS_API_RemoteCall_type_identifier)

static inline cFS_API_Function_union_ref_t cFS_API_Function_as_NONE()
{ cFS_API_Function_union_ref_t uref; uref.type = cFS_API_Function_NONE; uref.value = 0; return uref; }
static inline cFS_API_Function_union_ref_t cFS_API_Function_as_RunLoop(cFS_API_RunLoop_ref_t ref)
{ cFS_API_Function_union_ref_t uref; uref.type = cFS_API_Function_RunLoop; uref.value = ref; return uref; }
static inline cFS_API_Function_union_ref_t cFS_API_Function_as_PerfLogAdd(cFS_API_PerfLogAdd_ref_t ref)
{ cFS_API_Function_union_ref_t uref; uref.type = cFS_API_Function_PerfLogAdd; uref.value = ref; return uref; }
static inline cFS_API_Function_union_ref_t cFS_API_Function_as_RegisterApp(cFS_API_RegisterApp_ref_t ref)
{ cFS_API_Function_union_ref_t uref; uref.type = cFS_API_Function_RegisterApp; uref.value = ref; return uref; }
static inline cFS_API_Function_union_ref_t cFS_API_Function_as_ExitApp(cFS_API_ExitApp_ref_t ref)
{ cFS_API_Function_union_ref_t uref; uref.type = cFS_API_Function_ExitApp; uref.value = ref; return uref; }
static inline cFS_API_Function_union_ref_t cFS_API_Function_as_Register(cFS_API_Register_ref_t ref)
{ cFS_API_Function_union_ref_t uref; uref.type = cFS_API_Function_Register; uref.value = ref; return uref; }
static inline cFS_API_Function_union_ref_t cFS_API_Function_as_Unregister(cFS_API_Unregister_ref_t ref)
{ cFS_API_Function_union_ref_t uref; uref.type = cFS_API_Function_Unregister; uref.value = ref; return uref; }
static inline cFS_API_Function_union_ref_t cFS_API_Function_as_SendEvent(cFS_API_SendEvent_ref_t ref)
{ cFS_API_Function_union_ref_t uref; uref.type = cFS_API_Function_SendEvent; uref.value = ref; return uref; }
static inline cFS_API_Function_union_ref_t cFS_API_Function_as_SendEventWithAppID(cFS_API_SendEventWithAppID_ref_t ref)
{ cFS_API_Function_union_ref_t uref; uref.type = cFS_API_Function_SendEventWithAppID; uref.value = ref; return uref; }
static inline cFS_API_Function_union_ref_t cFS_API_Function_as_SendTimedEvent(cFS_API_SendTimedEvent_ref_t ref)
{ cFS_API_Function_union_ref_t uref; uref.type = cFS_API_Function_SendTimedEvent; uref.value = ref; return uref; }
static inline cFS_API_Function_union_ref_t cFS_API_Function_as_ResetFilter(cFS_API_ResetFilter_ref_t ref)
{ cFS_API_Function_union_ref_t uref; uref.type = cFS_API_Function_ResetFilter; uref.value = ref; return uref; }
static inline cFS_API_Function_union_ref_t cFS_API_Function_as_ResetAllFilters(cFS_API_ResetAllFilters_ref_t ref)
{ cFS_API_Function_union_ref_t uref; uref.type = cFS_API_Function_ResetAllFilters; uref.value = ref; return uref; }
static inline cFS_API_Function_union_ref_t cFS_API_Function_as_FS_ReadHeader(cFS_API_FS_ReadHeader_ref_t ref)
{ cFS_API_Function_union_ref_t uref; uref.type = cFS_API_Function_FS_ReadHeader; uref.value = ref; return uref; }
static inline cFS_API_Function_union_ref_t cFS_API_Function_as_FS_WriteHeader(cFS_API_FS_WriteHeader_ref_t ref)
{ cFS_API_Function_union_ref_t uref; uref.type = cFS_API_Function_FS_WriteHeader; uref.value = ref; return uref; }
static inline cFS_API_Function_union_ref_t cFS_API_Function_as_FS_SetTimestamp(cFS_API_FS_SetTimestamp_ref_t ref)
{ cFS_API_Function_union_ref_t uref; uref.type = cFS_API_Function_FS_SetTimestamp; uref.value = ref; return uref; }
static inline cFS_API_Function_union_ref_t cFS_API_Function_as_FS_Decompress(cFS_API_FS_Decompress_ref_t ref)
{ cFS_API_Function_union_ref_t uref; uref.type = cFS_API_Function_FS_Decompress; uref.value = ref; return uref; }
static inline cFS_API_Function_union_ref_t cFS_API_Function_as_FS_GetUncompressedFile(cFS_API_FS_GetUncompressedFile_ref_t ref)
{ cFS_API_Function_union_ref_t uref; uref.type = cFS_API_Function_FS_GetUncompressedFile; uref.value = ref; return uref; }
static inline cFS_API_Function_union_ref_t cFS_API_Function_as_TIME_GetTime(cFS_API_TIME_GetTime_ref_t ref)
{ cFS_API_Function_union_ref_t uref; uref.type = cFS_API_Function_TIME_GetTime; uref.value = ref; return uref; }
static inline cFS_API_Function_union_ref_t cFS_API_Function_as_TIME_GetTAI(cFS_API_TIME_GetTAI_ref_t ref)
{ cFS_API_Function_union_ref_t uref; uref.type = cFS_API_Function_TIME_GetTAI; uref.value = ref; return uref; }
static inline cFS_API_Function_union_ref_t cFS_API_Function_as_TIME_GetUTC(cFS_API_TIME_GetUTC_ref_t ref)
{ cFS_API_Function_union_ref_t uref; uref.type = cFS_API_Function_TIME_GetUTC; uref.value = ref; return uref; }
static inline cFS_API_Function_union_ref_t cFS_API_Function_as_TIME_MET2SCTime(cFS_API_TIME_MET2SCTime_ref_t ref)
{ cFS_API_Function_union_ref_t uref; uref.type = cFS_API_Function_TIME_MET2SCTime; uref.value = ref; return uref; }
static inline cFS_API_Function_union_ref_t cFS_API_Function_as_TIME_GetSTCF(cFS_API_TIME_GetSTCF_ref_t ref)
{ cFS_API_Function_union_ref_t uref; uref.type = cFS_API_Function_TIME_GetSTCF; uref.value = ref; return uref; }
static inline cFS_API_Function_union_ref_t cFS_API_Function_as_TIME_GetMET(cFS_API_TIME_GetMET_ref_t ref)
{ cFS_API_Function_union_ref_t uref; uref.type = cFS_API_Function_TIME_GetMET; uref.value = ref; return uref; }
static inline cFS_API_Function_union_ref_t cFS_API_Function_as_TIME_GetMETseconds(cFS_API_TIME_GetMETseconds_ref_t ref)
{ cFS_API_Function_union_ref_t uref; uref.type = cFS_API_Function_TIME_GetMETseconds; uref.value = ref; return uref; }
static inline cFS_API_Function_union_ref_t cFS_API_Function_as_TIME_GetMETsubsecs(cFS_API_TIME_GetMETsubsecs_ref_t ref)
{ cFS_API_Function_union_ref_t uref; uref.type = cFS_API_Function_TIME_GetMETsubsecs; uref.value = ref; return uref; }
static inline cFS_API_Function_union_ref_t cFS_API_Function_as_TIME_GetLeapSeconds(cFS_API_TIME_GetLeapSeconds_ref_t ref)
{ cFS_API_Function_union_ref_t uref; uref.type = cFS_API_Function_TIME_GetLeapSeconds; uref.value = ref; return uref; }
static inline cFS_API_Function_union_ref_t cFS_API_Function_as_TIME_GetClockState(cFS_API_TIME_GetClockState_ref_t ref)
{ cFS_API_Function_union_ref_t uref; uref.type = cFS_API_Function_TIME_GetClockState; uref.value = ref; return uref; }
static inline cFS_API_Function_union_ref_t cFS_API_Function_as_TIME_GetClockInfo(cFS_API_TIME_GetClockInfo_ref_t ref)
{ cFS_API_Function_union_ref_t uref; uref.type = cFS_API_Function_TIME_GetClockInfo; uref.value = ref; return uref; }
__flatbuffers_build_union_vector(flatbuffers_, cFS_API_Function)

static cFS_API_Function_union_ref_t cFS_API_Function_clone(flatbuffers_builder_t *B, cFS_API_Function_union_t u)
{
    switch (u.type) {
    case 1: return cFS_API_Function_as_RunLoop(cFS_API_RunLoop_clone(B, (cFS_API_RunLoop_table_t)u.value));
    case 2: return cFS_API_Function_as_PerfLogAdd(cFS_API_PerfLogAdd_clone(B, (cFS_API_PerfLogAdd_table_t)u.value));
    case 3: return cFS_API_Function_as_RegisterApp(cFS_API_RegisterApp_clone(B, (cFS_API_RegisterApp_table_t)u.value));
    case 4: return cFS_API_Function_as_ExitApp(cFS_API_ExitApp_clone(B, (cFS_API_ExitApp_table_t)u.value));
    case 5: return cFS_API_Function_as_Register(cFS_API_Register_clone(B, (cFS_API_Register_table_t)u.value));
    case 6: return cFS_API_Function_as_Unregister(cFS_API_Unregister_clone(B, (cFS_API_Unregister_table_t)u.value));
    case 7: return cFS_API_Function_as_SendEvent(cFS_API_SendEvent_clone(B, (cFS_API_SendEvent_table_t)u.value));
    case 8: return cFS_API_Function_as_SendEventWithAppID(cFS_API_SendEventWithAppID_clone(B, (cFS_API_SendEventWithAppID_table_t)u.value));
    case 9: return cFS_API_Function_as_SendTimedEvent(cFS_API_SendTimedEvent_clone(B, (cFS_API_SendTimedEvent_table_t)u.value));
    case 10: return cFS_API_Function_as_ResetFilter(cFS_API_ResetFilter_clone(B, (cFS_API_ResetFilter_table_t)u.value));
    case 11: return cFS_API_Function_as_ResetAllFilters(cFS_API_ResetAllFilters_clone(B, (cFS_API_ResetAllFilters_table_t)u.value));
    case 12: return cFS_API_Function_as_FS_ReadHeader(cFS_API_FS_ReadHeader_clone(B, (cFS_API_FS_ReadHeader_table_t)u.value));
    case 13: return cFS_API_Function_as_FS_WriteHeader(cFS_API_FS_WriteHeader_clone(B, (cFS_API_FS_WriteHeader_table_t)u.value));
    case 14: return cFS_API_Function_as_FS_SetTimestamp(cFS_API_FS_SetTimestamp_clone(B, (cFS_API_FS_SetTimestamp_table_t)u.value));
    case 15: return cFS_API_Function_as_FS_Decompress(cFS_API_FS_Decompress_clone(B, (cFS_API_FS_Decompress_table_t)u.value));
    case 16: return cFS_API_Function_as_FS_GetUncompressedFile(cFS_API_FS_GetUncompressedFile_clone(B, (cFS_API_FS_GetUncompressedFile_table_t)u.value));
    case 17: return cFS_API_Function_as_TIME_GetTime(cFS_API_TIME_GetTime_clone(B, (cFS_API_TIME_GetTime_table_t)u.value));
    case 18: return cFS_API_Function_as_TIME_GetTAI(cFS_API_TIME_GetTAI_clone(B, (cFS_API_TIME_GetTAI_table_t)u.value));
    case 19: return cFS_API_Function_as_TIME_GetUTC(cFS_API_TIME_GetUTC_clone(B, (cFS_API_TIME_GetUTC_table_t)u.value));
    case 20: return cFS_API_Function_as_TIME_MET2SCTime(cFS_API_TIME_MET2SCTime_clone(B, (cFS_API_TIME_MET2SCTime_table_t)u.value));
    case 21: return cFS_API_Function_as_TIME_GetSTCF(cFS_API_TIME_GetSTCF_clone(B, (cFS_API_TIME_GetSTCF_table_t)u.value));
    case 22: return cFS_API_Function_as_TIME_GetMET(cFS_API_TIME_GetMET_clone(B, (cFS_API_TIME_GetMET_table_t)u.value));
    case 23: return cFS_API_Function_as_TIME_GetMETseconds(cFS_API_TIME_GetMETseconds_clone(B, (cFS_API_TIME_GetMETseconds_table_t)u.value));
    case 24: return cFS_API_Function_as_TIME_GetMETsubsecs(cFS_API_TIME_GetMETsubsecs_clone(B, (cFS_API_TIME_GetMETsubsecs_table_t)u.value));
    case 25: return cFS_API_Function_as_TIME_GetLeapSeconds(cFS_API_TIME_GetLeapSeconds_clone(B, (cFS_API_TIME_GetLeapSeconds_table_t)u.value));
    case 26: return cFS_API_Function_as_TIME_GetClockState(cFS_API_TIME_GetClockState_clone(B, (cFS_API_TIME_GetClockState_table_t)u.value));
    case 27: return cFS_API_Function_as_TIME_GetClockInfo(cFS_API_TIME_GetClockInfo_clone(B, (cFS_API_TIME_GetClockInfo_table_t)u.value));
    default: return cFS_API_Function_as_NONE();
    }
}

__flatbuffers_build_scalar_field(0, flatbuffers_, cFS_API_RunLoop_ExitStatus, flatbuffers_uint32, uint32_t, 4, 4, UINT32_C(0), cFS_API_RunLoop)

static inline cFS_API_RunLoop_ref_t cFS_API_RunLoop_create(flatbuffers_builder_t *B __cFS_API_RunLoop_formal_args)
{
    if (cFS_API_RunLoop_start(B)
        || cFS_API_RunLoop_ExitStatus_add(B, v0)) {
        return 0;
    }
    return cFS_API_RunLoop_end(B);
}

static cFS_API_RunLoop_ref_t cFS_API_RunLoop_clone(flatbuffers_builder_t *B, cFS_API_RunLoop_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (cFS_API_RunLoop_start(B)
        || cFS_API_RunLoop_ExitStatus_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, cFS_API_RunLoop_end(B));
}

__flatbuffers_build_scalar_field(0, flatbuffers_, cFS_API_PerfLogAdd_Marker, flatbuffers_uint32, uint32_t, 4, 4, UINT32_C(0), cFS_API_PerfLogAdd)
__flatbuffers_build_scalar_field(1, flatbuffers_, cFS_API_PerfLogAdd_EntryExit, flatbuffers_uint32, uint32_t, 4, 4, UINT32_C(0), cFS_API_PerfLogAdd)

static inline cFS_API_PerfLogAdd_ref_t cFS_API_PerfLogAdd_create(flatbuffers_builder_t *B __cFS_API_PerfLogAdd_formal_args)
{
    if (cFS_API_PerfLogAdd_start(B)
        || cFS_API_PerfLogAdd_Marker_add(B, v0)
        || cFS_API_PerfLogAdd_EntryExit_add(B, v1)) {
        return 0;
    }
    return cFS_API_PerfLogAdd_end(B);
}

static cFS_API_PerfLogAdd_ref_t cFS_API_PerfLogAdd_clone(flatbuffers_builder_t *B, cFS_API_PerfLogAdd_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (cFS_API_PerfLogAdd_start(B)
        || cFS_API_PerfLogAdd_Marker_pick(B, t)
        || cFS_API_PerfLogAdd_EntryExit_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, cFS_API_PerfLogAdd_end(B));
}


static inline cFS_API_RegisterApp_ref_t cFS_API_RegisterApp_create(flatbuffers_builder_t *B __cFS_API_RegisterApp_formal_args)
{
    if (cFS_API_RegisterApp_start(B)) {
        return 0;
    }
    return cFS_API_RegisterApp_end(B);
}

static cFS_API_RegisterApp_ref_t cFS_API_RegisterApp_clone(flatbuffers_builder_t *B, cFS_API_RegisterApp_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (cFS_API_RegisterApp_start(B)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, cFS_API_RegisterApp_end(B));
}

__flatbuffers_build_scalar_field(0, flatbuffers_, cFS_API_ExitApp_ExitStatus, flatbuffers_uint32, uint32_t, 4, 4, UINT32_C(0), cFS_API_ExitApp)

static inline cFS_API_ExitApp_ref_t cFS_API_ExitApp_create(flatbuffers_builder_t *B __cFS_API_ExitApp_formal_args)
{
    if (cFS_API_ExitApp_start(B)
        || cFS_API_ExitApp_ExitStatus_add(B, v0)) {
        return 0;
    }
    return cFS_API_ExitApp_end(B);
}

static cFS_API_ExitApp_ref_t cFS_API_ExitApp_clone(flatbuffers_builder_t *B, cFS_API_ExitApp_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (cFS_API_ExitApp_start(B)
        || cFS_API_ExitApp_ExitStatus_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, cFS_API_ExitApp_end(B));
}

__flatbuffers_build_scalar_field(0, flatbuffers_, cFS_API_SendEvent_EventID, flatbuffers_uint16, uint16_t, 2, 2, UINT16_C(0), cFS_API_SendEvent)
__flatbuffers_build_scalar_field(1, flatbuffers_, cFS_API_SendEvent_EventType, flatbuffers_uint16, uint16_t, 2, 2, UINT16_C(0), cFS_API_SendEvent)
__flatbuffers_build_string_field(2, flatbuffers_, cFS_API_SendEvent_Spec, cFS_API_SendEvent)

static inline cFS_API_SendEvent_ref_t cFS_API_SendEvent_create(flatbuffers_builder_t *B __cFS_API_SendEvent_formal_args)
{
    if (cFS_API_SendEvent_start(B)
        || cFS_API_SendEvent_Spec_add(B, v2)
        || cFS_API_SendEvent_EventID_add(B, v0)
        || cFS_API_SendEvent_EventType_add(B, v1)) {
        return 0;
    }
    return cFS_API_SendEvent_end(B);
}

static cFS_API_SendEvent_ref_t cFS_API_SendEvent_clone(flatbuffers_builder_t *B, cFS_API_SendEvent_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (cFS_API_SendEvent_start(B)
        || cFS_API_SendEvent_Spec_pick(B, t)
        || cFS_API_SendEvent_EventID_pick(B, t)
        || cFS_API_SendEvent_EventType_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, cFS_API_SendEvent_end(B));
}

__flatbuffers_build_scalar_field(0, flatbuffers_, cFS_API_SendEventWithAppID_EventID, flatbuffers_uint16, uint16_t, 2, 2, UINT16_C(0), cFS_API_SendEventWithAppID)
__flatbuffers_build_scalar_field(1, flatbuffers_, cFS_API_SendEventWithAppID_EventType, flatbuffers_uint16, uint16_t, 2, 2, UINT16_C(0), cFS_API_SendEventWithAppID)
__flatbuffers_build_scalar_field(2, flatbuffers_, cFS_API_SendEventWithAppID_AppID, flatbuffers_uint32, uint32_t, 4, 4, UINT32_C(0), cFS_API_SendEventWithAppID)
__flatbuffers_build_string_field(3, flatbuffers_, cFS_API_SendEventWithAppID_Spec, cFS_API_SendEventWithAppID)

static inline cFS_API_SendEventWithAppID_ref_t cFS_API_SendEventWithAppID_create(flatbuffers_builder_t *B __cFS_API_SendEventWithAppID_formal_args)
{
    if (cFS_API_SendEventWithAppID_start(B)
        || cFS_API_SendEventWithAppID_AppID_add(B, v2)
        || cFS_API_SendEventWithAppID_Spec_add(B, v3)
        || cFS_API_SendEventWithAppID_EventID_add(B, v0)
        || cFS_API_SendEventWithAppID_EventType_add(B, v1)) {
        return 0;
    }
    return cFS_API_SendEventWithAppID_end(B);
}

static cFS_API_SendEventWithAppID_ref_t cFS_API_SendEventWithAppID_clone(flatbuffers_builder_t *B, cFS_API_SendEventWithAppID_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (cFS_API_SendEventWithAppID_start(B)
        || cFS_API_SendEventWithAppID_AppID_pick(B, t)
        || cFS_API_SendEventWithAppID_Spec_pick(B, t)
        || cFS_API_SendEventWithAppID_EventID_pick(B, t)
        || cFS_API_SendEventWithAppID_EventType_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, cFS_API_SendEventWithAppID_end(B));
}

__flatbuffers_build_table_field(0, flatbuffers_, cFS_API_SendTimedEvent_Time, cFETime, cFS_API_SendTimedEvent)
__flatbuffers_build_scalar_field(1, flatbuffers_, cFS_API_SendTimedEvent_EventID, flatbuffers_uint16, uint16_t, 2, 2, UINT16_C(0), cFS_API_SendTimedEvent)
__flatbuffers_build_scalar_field(2, flatbuffers_, cFS_API_SendTimedEvent_EventType, flatbuffers_uint16, uint16_t, 2, 2, UINT16_C(0), cFS_API_SendTimedEvent)
__flatbuffers_build_string_field(3, flatbuffers_, cFS_API_SendTimedEvent_Spec, cFS_API_SendTimedEvent)

static inline cFS_API_SendTimedEvent_ref_t cFS_API_SendTimedEvent_create(flatbuffers_builder_t *B __cFS_API_SendTimedEvent_formal_args)
{
    if (cFS_API_SendTimedEvent_start(B)
        || cFS_API_SendTimedEvent_Time_add(B, v0)
        || cFS_API_SendTimedEvent_Spec_add(B, v3)
        || cFS_API_SendTimedEvent_EventID_add(B, v1)
        || cFS_API_SendTimedEvent_EventType_add(B, v2)) {
        return 0;
    }
    return cFS_API_SendTimedEvent_end(B);
}

static cFS_API_SendTimedEvent_ref_t cFS_API_SendTimedEvent_clone(flatbuffers_builder_t *B, cFS_API_SendTimedEvent_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (cFS_API_SendTimedEvent_start(B)
        || cFS_API_SendTimedEvent_Time_pick(B, t)
        || cFS_API_SendTimedEvent_Spec_pick(B, t)
        || cFS_API_SendTimedEvent_EventID_pick(B, t)
        || cFS_API_SendTimedEvent_EventType_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, cFS_API_SendTimedEvent_end(B));
}

__flatbuffers_build_scalar_field(0, flatbuffers_, cFS_API_Filter_EventID, flatbuffers_uint16, uint16_t, 2, 2, UINT16_C(0), cFS_API_Filter)
__flatbuffers_build_scalar_field(1, flatbuffers_, cFS_API_Filter_Mask, flatbuffers_uint16, uint16_t, 2, 2, UINT16_C(0), cFS_API_Filter)

static inline cFS_API_Filter_ref_t cFS_API_Filter_create(flatbuffers_builder_t *B __cFS_API_Filter_formal_args)
{
    if (cFS_API_Filter_start(B)
        || cFS_API_Filter_EventID_add(B, v0)
        || cFS_API_Filter_Mask_add(B, v1)) {
        return 0;
    }
    return cFS_API_Filter_end(B);
}

static cFS_API_Filter_ref_t cFS_API_Filter_clone(flatbuffers_builder_t *B, cFS_API_Filter_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (cFS_API_Filter_start(B)
        || cFS_API_Filter_EventID_pick(B, t)
        || cFS_API_Filter_Mask_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, cFS_API_Filter_end(B));
}

__flatbuffers_build_table_vector_field(0, flatbuffers_, cFS_API_Register_Filters, cFS_API_Filter, cFS_API_Register)
__flatbuffers_build_scalar_field(1, flatbuffers_, cFS_API_Register_NumFilteredEvents, flatbuffers_uint16, uint16_t, 2, 2, UINT16_C(0), cFS_API_Register)
__flatbuffers_build_scalar_field(2, flatbuffers_, cFS_API_Register_FilterScheme, flatbuffers_uint16, uint16_t, 2, 2, UINT16_C(0), cFS_API_Register)

static inline cFS_API_Register_ref_t cFS_API_Register_create(flatbuffers_builder_t *B __cFS_API_Register_formal_args)
{
    if (cFS_API_Register_start(B)
        || cFS_API_Register_Filters_add(B, v0)
        || cFS_API_Register_NumFilteredEvents_add(B, v1)
        || cFS_API_Register_FilterScheme_add(B, v2)) {
        return 0;
    }
    return cFS_API_Register_end(B);
}

static cFS_API_Register_ref_t cFS_API_Register_clone(flatbuffers_builder_t *B, cFS_API_Register_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (cFS_API_Register_start(B)
        || cFS_API_Register_Filters_pick(B, t)
        || cFS_API_Register_NumFilteredEvents_pick(B, t)
        || cFS_API_Register_FilterScheme_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, cFS_API_Register_end(B));
}


static inline cFS_API_Unregister_ref_t cFS_API_Unregister_create(flatbuffers_builder_t *B __cFS_API_Unregister_formal_args)
{
    if (cFS_API_Unregister_start(B)) {
        return 0;
    }
    return cFS_API_Unregister_end(B);
}

static cFS_API_Unregister_ref_t cFS_API_Unregister_clone(flatbuffers_builder_t *B, cFS_API_Unregister_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (cFS_API_Unregister_start(B)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, cFS_API_Unregister_end(B));
}

__flatbuffers_build_scalar_field(0, flatbuffers_, cFS_API_ResetFilter_EventID, flatbuffers_int16, int16_t, 2, 2, INT16_C(0), cFS_API_ResetFilter)

static inline cFS_API_ResetFilter_ref_t cFS_API_ResetFilter_create(flatbuffers_builder_t *B __cFS_API_ResetFilter_formal_args)
{
    if (cFS_API_ResetFilter_start(B)
        || cFS_API_ResetFilter_EventID_add(B, v0)) {
        return 0;
    }
    return cFS_API_ResetFilter_end(B);
}

static cFS_API_ResetFilter_ref_t cFS_API_ResetFilter_clone(flatbuffers_builder_t *B, cFS_API_ResetFilter_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (cFS_API_ResetFilter_start(B)
        || cFS_API_ResetFilter_EventID_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, cFS_API_ResetFilter_end(B));
}


static inline cFS_API_ResetAllFilters_ref_t cFS_API_ResetAllFilters_create(flatbuffers_builder_t *B __cFS_API_ResetAllFilters_formal_args)
{
    if (cFS_API_ResetAllFilters_start(B)) {
        return 0;
    }
    return cFS_API_ResetAllFilters_end(B);
}

static cFS_API_ResetAllFilters_ref_t cFS_API_ResetAllFilters_clone(flatbuffers_builder_t *B, cFS_API_ResetAllFilters_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (cFS_API_ResetAllFilters_start(B)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, cFS_API_ResetAllFilters_end(B));
}

__flatbuffers_build_scalar_field(0, flatbuffers_, cFS_API_FS_Header_t_ContentType, flatbuffers_uint32, uint32_t, 4, 4, UINT32_C(0), cFS_API_FS_Header_t)
__flatbuffers_build_scalar_field(1, flatbuffers_, cFS_API_FS_Header_t_SubType, flatbuffers_uint32, uint32_t, 4, 4, UINT32_C(0), cFS_API_FS_Header_t)
__flatbuffers_build_scalar_field(2, flatbuffers_, cFS_API_FS_Header_t_Length, flatbuffers_uint32, uint32_t, 4, 4, UINT32_C(0), cFS_API_FS_Header_t)
__flatbuffers_build_scalar_field(3, flatbuffers_, cFS_API_FS_Header_t_SpacecraftID, flatbuffers_uint32, uint32_t, 4, 4, UINT32_C(0), cFS_API_FS_Header_t)
__flatbuffers_build_scalar_field(4, flatbuffers_, cFS_API_FS_Header_t_ProcessorID, flatbuffers_uint32, uint32_t, 4, 4, UINT32_C(0), cFS_API_FS_Header_t)
__flatbuffers_build_scalar_field(5, flatbuffers_, cFS_API_FS_Header_t_ApplicationID, flatbuffers_uint32, uint32_t, 4, 4, UINT32_C(0), cFS_API_FS_Header_t)
__flatbuffers_build_scalar_field(6, flatbuffers_, cFS_API_FS_Header_t_TimeSeconds, flatbuffers_uint32, uint32_t, 4, 4, UINT32_C(0), cFS_API_FS_Header_t)
__flatbuffers_build_scalar_field(7, flatbuffers_, cFS_API_FS_Header_t_TimeSubSeconds, flatbuffers_uint32, uint32_t, 4, 4, UINT32_C(0), cFS_API_FS_Header_t)
__flatbuffers_build_string_field(8, flatbuffers_, cFS_API_FS_Header_t_Description, cFS_API_FS_Header_t)

static inline cFS_API_FS_Header_t_ref_t cFS_API_FS_Header_t_create(flatbuffers_builder_t *B __cFS_API_FS_Header_t_formal_args)
{
    if (cFS_API_FS_Header_t_start(B)
        || cFS_API_FS_Header_t_ContentType_add(B, v0)
        || cFS_API_FS_Header_t_SubType_add(B, v1)
        || cFS_API_FS_Header_t_Length_add(B, v2)
        || cFS_API_FS_Header_t_SpacecraftID_add(B, v3)
        || cFS_API_FS_Header_t_ProcessorID_add(B, v4)
        || cFS_API_FS_Header_t_ApplicationID_add(B, v5)
        || cFS_API_FS_Header_t_TimeSeconds_add(B, v6)
        || cFS_API_FS_Header_t_TimeSubSeconds_add(B, v7)
        || cFS_API_FS_Header_t_Description_add(B, v8)) {
        return 0;
    }
    return cFS_API_FS_Header_t_end(B);
}

static cFS_API_FS_Header_t_ref_t cFS_API_FS_Header_t_clone(flatbuffers_builder_t *B, cFS_API_FS_Header_t_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (cFS_API_FS_Header_t_start(B)
        || cFS_API_FS_Header_t_ContentType_pick(B, t)
        || cFS_API_FS_Header_t_SubType_pick(B, t)
        || cFS_API_FS_Header_t_Length_pick(B, t)
        || cFS_API_FS_Header_t_SpacecraftID_pick(B, t)
        || cFS_API_FS_Header_t_ProcessorID_pick(B, t)
        || cFS_API_FS_Header_t_ApplicationID_pick(B, t)
        || cFS_API_FS_Header_t_TimeSeconds_pick(B, t)
        || cFS_API_FS_Header_t_TimeSubSeconds_pick(B, t)
        || cFS_API_FS_Header_t_Description_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, cFS_API_FS_Header_t_end(B));
}

__flatbuffers_build_table_field(0, flatbuffers_, cFS_API_FS_ReadHeader_Hdr, cFS_API_FS_Header_t, cFS_API_FS_ReadHeader)
__flatbuffers_build_scalar_field(1, flatbuffers_, cFS_API_FS_ReadHeader_FileDes, flatbuffers_int32, int32_t, 4, 4, INT32_C(0), cFS_API_FS_ReadHeader)

static inline cFS_API_FS_ReadHeader_ref_t cFS_API_FS_ReadHeader_create(flatbuffers_builder_t *B __cFS_API_FS_ReadHeader_formal_args)
{
    if (cFS_API_FS_ReadHeader_start(B)
        || cFS_API_FS_ReadHeader_Hdr_add(B, v0)
        || cFS_API_FS_ReadHeader_FileDes_add(B, v1)) {
        return 0;
    }
    return cFS_API_FS_ReadHeader_end(B);
}

static cFS_API_FS_ReadHeader_ref_t cFS_API_FS_ReadHeader_clone(flatbuffers_builder_t *B, cFS_API_FS_ReadHeader_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (cFS_API_FS_ReadHeader_start(B)
        || cFS_API_FS_ReadHeader_Hdr_pick(B, t)
        || cFS_API_FS_ReadHeader_FileDes_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, cFS_API_FS_ReadHeader_end(B));
}

__flatbuffers_build_scalar_field(0, flatbuffers_, cFS_API_FS_WriteHeader_FileDes, flatbuffers_int32, int32_t, 4, 4, INT32_C(0), cFS_API_FS_WriteHeader)
__flatbuffers_build_table_field(1, flatbuffers_, cFS_API_FS_WriteHeader_Hdr, cFS_API_FS_Header_t, cFS_API_FS_WriteHeader)

static inline cFS_API_FS_WriteHeader_ref_t cFS_API_FS_WriteHeader_create(flatbuffers_builder_t *B __cFS_API_FS_WriteHeader_formal_args)
{
    if (cFS_API_FS_WriteHeader_start(B)
        || cFS_API_FS_WriteHeader_FileDes_add(B, v0)
        || cFS_API_FS_WriteHeader_Hdr_add(B, v1)) {
        return 0;
    }
    return cFS_API_FS_WriteHeader_end(B);
}

static cFS_API_FS_WriteHeader_ref_t cFS_API_FS_WriteHeader_clone(flatbuffers_builder_t *B, cFS_API_FS_WriteHeader_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (cFS_API_FS_WriteHeader_start(B)
        || cFS_API_FS_WriteHeader_FileDes_pick(B, t)
        || cFS_API_FS_WriteHeader_Hdr_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, cFS_API_FS_WriteHeader_end(B));
}

__flatbuffers_build_scalar_field(0, flatbuffers_, cFS_API_FS_SetTimestamp_FileDes, flatbuffers_int32, int32_t, 4, 4, INT32_C(0), cFS_API_FS_SetTimestamp)
__flatbuffers_build_table_field(1, flatbuffers_, cFS_API_FS_SetTimestamp_NewTimestamp, cFETime, cFS_API_FS_SetTimestamp)

static inline cFS_API_FS_SetTimestamp_ref_t cFS_API_FS_SetTimestamp_create(flatbuffers_builder_t *B __cFS_API_FS_SetTimestamp_formal_args)
{
    if (cFS_API_FS_SetTimestamp_start(B)
        || cFS_API_FS_SetTimestamp_FileDes_add(B, v0)
        || cFS_API_FS_SetTimestamp_NewTimestamp_add(B, v1)) {
        return 0;
    }
    return cFS_API_FS_SetTimestamp_end(B);
}

static cFS_API_FS_SetTimestamp_ref_t cFS_API_FS_SetTimestamp_clone(flatbuffers_builder_t *B, cFS_API_FS_SetTimestamp_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (cFS_API_FS_SetTimestamp_start(B)
        || cFS_API_FS_SetTimestamp_FileDes_pick(B, t)
        || cFS_API_FS_SetTimestamp_NewTimestamp_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, cFS_API_FS_SetTimestamp_end(B));
}

__flatbuffers_build_string_field(0, flatbuffers_, cFS_API_FS_Decompress_SourceFile, cFS_API_FS_Decompress)
__flatbuffers_build_string_field(1, flatbuffers_, cFS_API_FS_Decompress_DestinationFile, cFS_API_FS_Decompress)

static inline cFS_API_FS_Decompress_ref_t cFS_API_FS_Decompress_create(flatbuffers_builder_t *B __cFS_API_FS_Decompress_formal_args)
{
    if (cFS_API_FS_Decompress_start(B)
        || cFS_API_FS_Decompress_SourceFile_add(B, v0)
        || cFS_API_FS_Decompress_DestinationFile_add(B, v1)) {
        return 0;
    }
    return cFS_API_FS_Decompress_end(B);
}

static cFS_API_FS_Decompress_ref_t cFS_API_FS_Decompress_clone(flatbuffers_builder_t *B, cFS_API_FS_Decompress_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (cFS_API_FS_Decompress_start(B)
        || cFS_API_FS_Decompress_SourceFile_pick(B, t)
        || cFS_API_FS_Decompress_DestinationFile_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, cFS_API_FS_Decompress_end(B));
}

__flatbuffers_build_string_field(0, flatbuffers_, cFS_API_FS_GetUncompressedFile_OutputNameBuffer, cFS_API_FS_GetUncompressedFile)
__flatbuffers_build_scalar_field(1, flatbuffers_, cFS_API_FS_GetUncompressedFile_OutputNameBufferSize, flatbuffers_uint32, uint32_t, 4, 4, UINT32_C(0), cFS_API_FS_GetUncompressedFile)
__flatbuffers_build_string_field(2, flatbuffers_, cFS_API_FS_GetUncompressedFile_GzipFileName, cFS_API_FS_GetUncompressedFile)
__flatbuffers_build_string_field(3, flatbuffers_, cFS_API_FS_GetUncompressedFile_TempDir, cFS_API_FS_GetUncompressedFile)

static inline cFS_API_FS_GetUncompressedFile_ref_t cFS_API_FS_GetUncompressedFile_create(flatbuffers_builder_t *B __cFS_API_FS_GetUncompressedFile_formal_args)
{
    if (cFS_API_FS_GetUncompressedFile_start(B)
        || cFS_API_FS_GetUncompressedFile_OutputNameBuffer_add(B, v0)
        || cFS_API_FS_GetUncompressedFile_OutputNameBufferSize_add(B, v1)
        || cFS_API_FS_GetUncompressedFile_GzipFileName_add(B, v2)
        || cFS_API_FS_GetUncompressedFile_TempDir_add(B, v3)) {
        return 0;
    }
    return cFS_API_FS_GetUncompressedFile_end(B);
}

static cFS_API_FS_GetUncompressedFile_ref_t cFS_API_FS_GetUncompressedFile_clone(flatbuffers_builder_t *B, cFS_API_FS_GetUncompressedFile_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (cFS_API_FS_GetUncompressedFile_start(B)
        || cFS_API_FS_GetUncompressedFile_OutputNameBuffer_pick(B, t)
        || cFS_API_FS_GetUncompressedFile_OutputNameBufferSize_pick(B, t)
        || cFS_API_FS_GetUncompressedFile_GzipFileName_pick(B, t)
        || cFS_API_FS_GetUncompressedFile_TempDir_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, cFS_API_FS_GetUncompressedFile_end(B));
}


static inline cFS_API_TIME_GetTime_ref_t cFS_API_TIME_GetTime_create(flatbuffers_builder_t *B __cFS_API_TIME_GetTime_formal_args)
{
    if (cFS_API_TIME_GetTime_start(B)) {
        return 0;
    }
    return cFS_API_TIME_GetTime_end(B);
}

static cFS_API_TIME_GetTime_ref_t cFS_API_TIME_GetTime_clone(flatbuffers_builder_t *B, cFS_API_TIME_GetTime_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (cFS_API_TIME_GetTime_start(B)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, cFS_API_TIME_GetTime_end(B));
}


static inline cFS_API_TIME_GetTAI_ref_t cFS_API_TIME_GetTAI_create(flatbuffers_builder_t *B __cFS_API_TIME_GetTAI_formal_args)
{
    if (cFS_API_TIME_GetTAI_start(B)) {
        return 0;
    }
    return cFS_API_TIME_GetTAI_end(B);
}

static cFS_API_TIME_GetTAI_ref_t cFS_API_TIME_GetTAI_clone(flatbuffers_builder_t *B, cFS_API_TIME_GetTAI_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (cFS_API_TIME_GetTAI_start(B)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, cFS_API_TIME_GetTAI_end(B));
}


static inline cFS_API_TIME_GetUTC_ref_t cFS_API_TIME_GetUTC_create(flatbuffers_builder_t *B __cFS_API_TIME_GetUTC_formal_args)
{
    if (cFS_API_TIME_GetUTC_start(B)) {
        return 0;
    }
    return cFS_API_TIME_GetUTC_end(B);
}

static cFS_API_TIME_GetUTC_ref_t cFS_API_TIME_GetUTC_clone(flatbuffers_builder_t *B, cFS_API_TIME_GetUTC_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (cFS_API_TIME_GetUTC_start(B)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, cFS_API_TIME_GetUTC_end(B));
}

__flatbuffers_build_table_field(0, flatbuffers_, cFS_API_TIME_MET2SCTime_METTime, cFETime, cFS_API_TIME_MET2SCTime)

static inline cFS_API_TIME_MET2SCTime_ref_t cFS_API_TIME_MET2SCTime_create(flatbuffers_builder_t *B __cFS_API_TIME_MET2SCTime_formal_args)
{
    if (cFS_API_TIME_MET2SCTime_start(B)
        || cFS_API_TIME_MET2SCTime_METTime_add(B, v0)) {
        return 0;
    }
    return cFS_API_TIME_MET2SCTime_end(B);
}

static cFS_API_TIME_MET2SCTime_ref_t cFS_API_TIME_MET2SCTime_clone(flatbuffers_builder_t *B, cFS_API_TIME_MET2SCTime_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (cFS_API_TIME_MET2SCTime_start(B)
        || cFS_API_TIME_MET2SCTime_METTime_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, cFS_API_TIME_MET2SCTime_end(B));
}


static inline cFS_API_TIME_GetSTCF_ref_t cFS_API_TIME_GetSTCF_create(flatbuffers_builder_t *B __cFS_API_TIME_GetSTCF_formal_args)
{
    if (cFS_API_TIME_GetSTCF_start(B)) {
        return 0;
    }
    return cFS_API_TIME_GetSTCF_end(B);
}

static cFS_API_TIME_GetSTCF_ref_t cFS_API_TIME_GetSTCF_clone(flatbuffers_builder_t *B, cFS_API_TIME_GetSTCF_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (cFS_API_TIME_GetSTCF_start(B)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, cFS_API_TIME_GetSTCF_end(B));
}


static inline cFS_API_TIME_GetMET_ref_t cFS_API_TIME_GetMET_create(flatbuffers_builder_t *B __cFS_API_TIME_GetMET_formal_args)
{
    if (cFS_API_TIME_GetMET_start(B)) {
        return 0;
    }
    return cFS_API_TIME_GetMET_end(B);
}

static cFS_API_TIME_GetMET_ref_t cFS_API_TIME_GetMET_clone(flatbuffers_builder_t *B, cFS_API_TIME_GetMET_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (cFS_API_TIME_GetMET_start(B)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, cFS_API_TIME_GetMET_end(B));
}


static inline cFS_API_TIME_GetMETseconds_ref_t cFS_API_TIME_GetMETseconds_create(flatbuffers_builder_t *B __cFS_API_TIME_GetMETseconds_formal_args)
{
    if (cFS_API_TIME_GetMETseconds_start(B)) {
        return 0;
    }
    return cFS_API_TIME_GetMETseconds_end(B);
}

static cFS_API_TIME_GetMETseconds_ref_t cFS_API_TIME_GetMETseconds_clone(flatbuffers_builder_t *B, cFS_API_TIME_GetMETseconds_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (cFS_API_TIME_GetMETseconds_start(B)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, cFS_API_TIME_GetMETseconds_end(B));
}


static inline cFS_API_TIME_GetMETsubsecs_ref_t cFS_API_TIME_GetMETsubsecs_create(flatbuffers_builder_t *B __cFS_API_TIME_GetMETsubsecs_formal_args)
{
    if (cFS_API_TIME_GetMETsubsecs_start(B)) {
        return 0;
    }
    return cFS_API_TIME_GetMETsubsecs_end(B);
}

static cFS_API_TIME_GetMETsubsecs_ref_t cFS_API_TIME_GetMETsubsecs_clone(flatbuffers_builder_t *B, cFS_API_TIME_GetMETsubsecs_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (cFS_API_TIME_GetMETsubsecs_start(B)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, cFS_API_TIME_GetMETsubsecs_end(B));
}


static inline cFS_API_TIME_GetLeapSeconds_ref_t cFS_API_TIME_GetLeapSeconds_create(flatbuffers_builder_t *B __cFS_API_TIME_GetLeapSeconds_formal_args)
{
    if (cFS_API_TIME_GetLeapSeconds_start(B)) {
        return 0;
    }
    return cFS_API_TIME_GetLeapSeconds_end(B);
}

static cFS_API_TIME_GetLeapSeconds_ref_t cFS_API_TIME_GetLeapSeconds_clone(flatbuffers_builder_t *B, cFS_API_TIME_GetLeapSeconds_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (cFS_API_TIME_GetLeapSeconds_start(B)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, cFS_API_TIME_GetLeapSeconds_end(B));
}


static inline cFS_API_TIME_GetClockState_ref_t cFS_API_TIME_GetClockState_create(flatbuffers_builder_t *B __cFS_API_TIME_GetClockState_formal_args)
{
    if (cFS_API_TIME_GetClockState_start(B)) {
        return 0;
    }
    return cFS_API_TIME_GetClockState_end(B);
}

static cFS_API_TIME_GetClockState_ref_t cFS_API_TIME_GetClockState_clone(flatbuffers_builder_t *B, cFS_API_TIME_GetClockState_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (cFS_API_TIME_GetClockState_start(B)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, cFS_API_TIME_GetClockState_end(B));
}


static inline cFS_API_TIME_GetClockInfo_ref_t cFS_API_TIME_GetClockInfo_create(flatbuffers_builder_t *B __cFS_API_TIME_GetClockInfo_formal_args)
{
    if (cFS_API_TIME_GetClockInfo_start(B)) {
        return 0;
    }
    return cFS_API_TIME_GetClockInfo_end(B);
}

static cFS_API_TIME_GetClockInfo_ref_t cFS_API_TIME_GetClockInfo_clone(flatbuffers_builder_t *B, cFS_API_TIME_GetClockInfo_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (cFS_API_TIME_GetClockInfo_start(B)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, cFS_API_TIME_GetClockInfo_end(B));
}

__flatbuffers_build_union_field(1, flatbuffers_, cFS_API_RemoteCall_input, cFS_API_Function, cFS_API_RemoteCall)
__flatbuffers_build_union_table_value_field(flatbuffers_, cFS_API_RemoteCall_input, cFS_API_Function, RunLoop, cFS_API_RunLoop)
__flatbuffers_build_union_table_value_field(flatbuffers_, cFS_API_RemoteCall_input, cFS_API_Function, PerfLogAdd, cFS_API_PerfLogAdd)
__flatbuffers_build_union_table_value_field(flatbuffers_, cFS_API_RemoteCall_input, cFS_API_Function, RegisterApp, cFS_API_RegisterApp)
__flatbuffers_build_union_table_value_field(flatbuffers_, cFS_API_RemoteCall_input, cFS_API_Function, ExitApp, cFS_API_ExitApp)
__flatbuffers_build_union_table_value_field(flatbuffers_, cFS_API_RemoteCall_input, cFS_API_Function, Register, cFS_API_Register)
__flatbuffers_build_union_table_value_field(flatbuffers_, cFS_API_RemoteCall_input, cFS_API_Function, Unregister, cFS_API_Unregister)
__flatbuffers_build_union_table_value_field(flatbuffers_, cFS_API_RemoteCall_input, cFS_API_Function, SendEvent, cFS_API_SendEvent)
__flatbuffers_build_union_table_value_field(flatbuffers_, cFS_API_RemoteCall_input, cFS_API_Function, SendEventWithAppID, cFS_API_SendEventWithAppID)
__flatbuffers_build_union_table_value_field(flatbuffers_, cFS_API_RemoteCall_input, cFS_API_Function, SendTimedEvent, cFS_API_SendTimedEvent)
__flatbuffers_build_union_table_value_field(flatbuffers_, cFS_API_RemoteCall_input, cFS_API_Function, ResetFilter, cFS_API_ResetFilter)
__flatbuffers_build_union_table_value_field(flatbuffers_, cFS_API_RemoteCall_input, cFS_API_Function, ResetAllFilters, cFS_API_ResetAllFilters)
__flatbuffers_build_union_table_value_field(flatbuffers_, cFS_API_RemoteCall_input, cFS_API_Function, FS_ReadHeader, cFS_API_FS_ReadHeader)
__flatbuffers_build_union_table_value_field(flatbuffers_, cFS_API_RemoteCall_input, cFS_API_Function, FS_WriteHeader, cFS_API_FS_WriteHeader)
__flatbuffers_build_union_table_value_field(flatbuffers_, cFS_API_RemoteCall_input, cFS_API_Function, FS_SetTimestamp, cFS_API_FS_SetTimestamp)
__flatbuffers_build_union_table_value_field(flatbuffers_, cFS_API_RemoteCall_input, cFS_API_Function, FS_Decompress, cFS_API_FS_Decompress)
__flatbuffers_build_union_table_value_field(flatbuffers_, cFS_API_RemoteCall_input, cFS_API_Function, FS_GetUncompressedFile, cFS_API_FS_GetUncompressedFile)
__flatbuffers_build_union_table_value_field(flatbuffers_, cFS_API_RemoteCall_input, cFS_API_Function, TIME_GetTime, cFS_API_TIME_GetTime)
__flatbuffers_build_union_table_value_field(flatbuffers_, cFS_API_RemoteCall_input, cFS_API_Function, TIME_GetTAI, cFS_API_TIME_GetTAI)
__flatbuffers_build_union_table_value_field(flatbuffers_, cFS_API_RemoteCall_input, cFS_API_Function, TIME_GetUTC, cFS_API_TIME_GetUTC)
__flatbuffers_build_union_table_value_field(flatbuffers_, cFS_API_RemoteCall_input, cFS_API_Function, TIME_MET2SCTime, cFS_API_TIME_MET2SCTime)
__flatbuffers_build_union_table_value_field(flatbuffers_, cFS_API_RemoteCall_input, cFS_API_Function, TIME_GetSTCF, cFS_API_TIME_GetSTCF)
__flatbuffers_build_union_table_value_field(flatbuffers_, cFS_API_RemoteCall_input, cFS_API_Function, TIME_GetMET, cFS_API_TIME_GetMET)
__flatbuffers_build_union_table_value_field(flatbuffers_, cFS_API_RemoteCall_input, cFS_API_Function, TIME_GetMETseconds, cFS_API_TIME_GetMETseconds)
__flatbuffers_build_union_table_value_field(flatbuffers_, cFS_API_RemoteCall_input, cFS_API_Function, TIME_GetMETsubsecs, cFS_API_TIME_GetMETsubsecs)
__flatbuffers_build_union_table_value_field(flatbuffers_, cFS_API_RemoteCall_input, cFS_API_Function, TIME_GetLeapSeconds, cFS_API_TIME_GetLeapSeconds)
__flatbuffers_build_union_table_value_field(flatbuffers_, cFS_API_RemoteCall_input, cFS_API_Function, TIME_GetClockState, cFS_API_TIME_GetClockState)
__flatbuffers_build_union_table_value_field(flatbuffers_, cFS_API_RemoteCall_input, cFS_API_Function, TIME_GetClockInfo, cFS_API_TIME_GetClockInfo)

static inline cFS_API_RemoteCall_ref_t cFS_API_RemoteCall_create(flatbuffers_builder_t *B __cFS_API_RemoteCall_formal_args)
{
    if (cFS_API_RemoteCall_start(B)
        || cFS_API_RemoteCall_input_add_value(B, v1)
        || cFS_API_RemoteCall_input_add_type(B, v1.type)) {
        return 0;
    }
    return cFS_API_RemoteCall_end(B);
}

static cFS_API_RemoteCall_ref_t cFS_API_RemoteCall_clone(flatbuffers_builder_t *B, cFS_API_RemoteCall_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (cFS_API_RemoteCall_start(B)
        || cFS_API_RemoteCall_input_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, cFS_API_RemoteCall_end(B));
}

#include "flatcc/flatcc_epilogue.h"
#endif /* CFS_API_BUILDER_H */
