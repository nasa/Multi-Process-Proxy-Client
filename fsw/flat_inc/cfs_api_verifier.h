#ifndef CFS_API_VERIFIER_H
#define CFS_API_VERIFIER_H

/* Generated by flatcc 0.6.0-pre FlatBuffers schema compiler for C by dvide.com */

#ifndef CFS_API_READER_H
#include "cfs_api_reader.h"
#endif
#include "flatcc/flatcc_verifier.h"
#ifndef COMMON_VERIFIER_H
#include "common_verifier.h"
#endif
#include "flatcc/flatcc_prologue.h"

static int cFS_API_cFETime_verify_table(flatcc_table_verifier_descriptor_t *td);
static int cFS_API_RunLoop_verify_table(flatcc_table_verifier_descriptor_t *td);
static int cFS_API_PerfLogAdd_verify_table(flatcc_table_verifier_descriptor_t *td);
static int cFS_API_RegisterApp_verify_table(flatcc_table_verifier_descriptor_t *td);
static int cFS_API_ExitApp_verify_table(flatcc_table_verifier_descriptor_t *td);
static int cFS_API_SendEvent_verify_table(flatcc_table_verifier_descriptor_t *td);
static int cFS_API_SendEventWithAppID_verify_table(flatcc_table_verifier_descriptor_t *td);
static int cFS_API_SendTimedEvent_verify_table(flatcc_table_verifier_descriptor_t *td);
static int cFS_API_Filter_verify_table(flatcc_table_verifier_descriptor_t *td);
static int cFS_API_Register_verify_table(flatcc_table_verifier_descriptor_t *td);
static int cFS_API_Unregister_verify_table(flatcc_table_verifier_descriptor_t *td);
static int cFS_API_ResetFilter_verify_table(flatcc_table_verifier_descriptor_t *td);
static int cFS_API_ResetAllFilters_verify_table(flatcc_table_verifier_descriptor_t *td);
static int cFS_API_RemoteCall_verify_table(flatcc_table_verifier_descriptor_t *td);

static int cFS_API_Function_union_verifier(flatcc_union_verifier_descriptor_t *ud)
{
    switch (ud->type) {
    case 1: return flatcc_verify_union_table(ud, cFS_API_RunLoop_verify_table); /* RunLoop */
    case 2: return flatcc_verify_union_table(ud, cFS_API_PerfLogAdd_verify_table); /* PerfLogAdd */
    case 3: return flatcc_verify_union_table(ud, cFS_API_RegisterApp_verify_table); /* RegisterApp */
    case 4: return flatcc_verify_union_table(ud, cFS_API_ExitApp_verify_table); /* ExitApp */
    case 5: return flatcc_verify_union_table(ud, cFS_API_Register_verify_table); /* Register */
    case 6: return flatcc_verify_union_table(ud, cFS_API_Unregister_verify_table); /* Unregister */
    case 7: return flatcc_verify_union_table(ud, cFS_API_SendEvent_verify_table); /* SendEvent */
    case 8: return flatcc_verify_union_table(ud, cFS_API_SendEventWithAppID_verify_table); /* SendEventWithAppID */
    case 9: return flatcc_verify_union_table(ud, cFS_API_SendTimedEvent_verify_table); /* SendTimedEvent */
    case 10: return flatcc_verify_union_table(ud, cFS_API_ResetFilter_verify_table); /* ResetFilter */
    case 11: return flatcc_verify_union_table(ud, cFS_API_ResetAllFilters_verify_table); /* ResetAllFilters */
    default: return flatcc_verify_ok;
    }
}

static int cFS_API_cFETime_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_field(td, 0, 4, 4) /* Seconds */)) return ret;
    if ((ret = flatcc_verify_field(td, 1, 4, 4) /* Subseconds */)) return ret;
    return flatcc_verify_ok;
}

static inline int cFS_API_cFETime_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, cFS_API_cFETime_identifier, &cFS_API_cFETime_verify_table);
}

static inline int cFS_API_cFETime_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, cFS_API_cFETime_type_identifier, &cFS_API_cFETime_verify_table);
}

static inline int cFS_API_cFETime_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &cFS_API_cFETime_verify_table);
}

static inline int cFS_API_cFETime_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &cFS_API_cFETime_verify_table);
}

static int cFS_API_RunLoop_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_field(td, 0, 4, 4) /* ExitStatus */)) return ret;
    return flatcc_verify_ok;
}

static inline int cFS_API_RunLoop_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, cFS_API_RunLoop_identifier, &cFS_API_RunLoop_verify_table);
}

static inline int cFS_API_RunLoop_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, cFS_API_RunLoop_type_identifier, &cFS_API_RunLoop_verify_table);
}

static inline int cFS_API_RunLoop_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &cFS_API_RunLoop_verify_table);
}

static inline int cFS_API_RunLoop_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &cFS_API_RunLoop_verify_table);
}

static int cFS_API_PerfLogAdd_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_field(td, 0, 4, 4) /* Marker */)) return ret;
    if ((ret = flatcc_verify_field(td, 1, 4, 4) /* EntryExit */)) return ret;
    return flatcc_verify_ok;
}

static inline int cFS_API_PerfLogAdd_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, cFS_API_PerfLogAdd_identifier, &cFS_API_PerfLogAdd_verify_table);
}

static inline int cFS_API_PerfLogAdd_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, cFS_API_PerfLogAdd_type_identifier, &cFS_API_PerfLogAdd_verify_table);
}

static inline int cFS_API_PerfLogAdd_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &cFS_API_PerfLogAdd_verify_table);
}

static inline int cFS_API_PerfLogAdd_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &cFS_API_PerfLogAdd_verify_table);
}

static int cFS_API_RegisterApp_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    return flatcc_verify_ok;
}

static inline int cFS_API_RegisterApp_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, cFS_API_RegisterApp_identifier, &cFS_API_RegisterApp_verify_table);
}

static inline int cFS_API_RegisterApp_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, cFS_API_RegisterApp_type_identifier, &cFS_API_RegisterApp_verify_table);
}

static inline int cFS_API_RegisterApp_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &cFS_API_RegisterApp_verify_table);
}

static inline int cFS_API_RegisterApp_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &cFS_API_RegisterApp_verify_table);
}

static int cFS_API_ExitApp_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_field(td, 0, 4, 4) /* ExitStatus */)) return ret;
    return flatcc_verify_ok;
}

static inline int cFS_API_ExitApp_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, cFS_API_ExitApp_identifier, &cFS_API_ExitApp_verify_table);
}

static inline int cFS_API_ExitApp_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, cFS_API_ExitApp_type_identifier, &cFS_API_ExitApp_verify_table);
}

static inline int cFS_API_ExitApp_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &cFS_API_ExitApp_verify_table);
}

static inline int cFS_API_ExitApp_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &cFS_API_ExitApp_verify_table);
}

static int cFS_API_SendEvent_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_field(td, 0, 2, 2) /* EventID */)) return ret;
    if ((ret = flatcc_verify_field(td, 1, 2, 2) /* EventType */)) return ret;
    if ((ret = flatcc_verify_string_field(td, 2, 0) /* Spec */)) return ret;
    return flatcc_verify_ok;
}

static inline int cFS_API_SendEvent_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, cFS_API_SendEvent_identifier, &cFS_API_SendEvent_verify_table);
}

static inline int cFS_API_SendEvent_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, cFS_API_SendEvent_type_identifier, &cFS_API_SendEvent_verify_table);
}

static inline int cFS_API_SendEvent_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &cFS_API_SendEvent_verify_table);
}

static inline int cFS_API_SendEvent_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &cFS_API_SendEvent_verify_table);
}

static int cFS_API_SendEventWithAppID_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_field(td, 0, 2, 2) /* EventID */)) return ret;
    if ((ret = flatcc_verify_field(td, 1, 2, 2) /* EventType */)) return ret;
    if ((ret = flatcc_verify_field(td, 2, 4, 4) /* AppID */)) return ret;
    if ((ret = flatcc_verify_string_field(td, 3, 0) /* Spec */)) return ret;
    return flatcc_verify_ok;
}

static inline int cFS_API_SendEventWithAppID_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, cFS_API_SendEventWithAppID_identifier, &cFS_API_SendEventWithAppID_verify_table);
}

static inline int cFS_API_SendEventWithAppID_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, cFS_API_SendEventWithAppID_type_identifier, &cFS_API_SendEventWithAppID_verify_table);
}

static inline int cFS_API_SendEventWithAppID_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &cFS_API_SendEventWithAppID_verify_table);
}

static inline int cFS_API_SendEventWithAppID_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &cFS_API_SendEventWithAppID_verify_table);
}

static int cFS_API_SendTimedEvent_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_table_field(td, 0, 0, &cFS_API_cFETime_verify_table) /* Time */)) return ret;
    if ((ret = flatcc_verify_field(td, 1, 2, 2) /* EventID */)) return ret;
    if ((ret = flatcc_verify_field(td, 2, 2, 2) /* EventType */)) return ret;
    if ((ret = flatcc_verify_string_field(td, 3, 0) /* Spec */)) return ret;
    return flatcc_verify_ok;
}

static inline int cFS_API_SendTimedEvent_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, cFS_API_SendTimedEvent_identifier, &cFS_API_SendTimedEvent_verify_table);
}

static inline int cFS_API_SendTimedEvent_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, cFS_API_SendTimedEvent_type_identifier, &cFS_API_SendTimedEvent_verify_table);
}

static inline int cFS_API_SendTimedEvent_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &cFS_API_SendTimedEvent_verify_table);
}

static inline int cFS_API_SendTimedEvent_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &cFS_API_SendTimedEvent_verify_table);
}

static int cFS_API_Filter_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_field(td, 0, 2, 2) /* EventID */)) return ret;
    if ((ret = flatcc_verify_field(td, 1, 2, 2) /* Mask */)) return ret;
    return flatcc_verify_ok;
}

static inline int cFS_API_Filter_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, cFS_API_Filter_identifier, &cFS_API_Filter_verify_table);
}

static inline int cFS_API_Filter_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, cFS_API_Filter_type_identifier, &cFS_API_Filter_verify_table);
}

static inline int cFS_API_Filter_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &cFS_API_Filter_verify_table);
}

static inline int cFS_API_Filter_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &cFS_API_Filter_verify_table);
}

static int cFS_API_Register_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_table_vector_field(td, 0, 0, &cFS_API_Filter_verify_table) /* Filters */)) return ret;
    if ((ret = flatcc_verify_field(td, 1, 2, 2) /* NumFilteredEvents */)) return ret;
    if ((ret = flatcc_verify_field(td, 2, 2, 2) /* FilterScheme */)) return ret;
    return flatcc_verify_ok;
}

static inline int cFS_API_Register_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, cFS_API_Register_identifier, &cFS_API_Register_verify_table);
}

static inline int cFS_API_Register_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, cFS_API_Register_type_identifier, &cFS_API_Register_verify_table);
}

static inline int cFS_API_Register_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &cFS_API_Register_verify_table);
}

static inline int cFS_API_Register_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &cFS_API_Register_verify_table);
}

static int cFS_API_Unregister_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    return flatcc_verify_ok;
}

static inline int cFS_API_Unregister_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, cFS_API_Unregister_identifier, &cFS_API_Unregister_verify_table);
}

static inline int cFS_API_Unregister_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, cFS_API_Unregister_type_identifier, &cFS_API_Unregister_verify_table);
}

static inline int cFS_API_Unregister_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &cFS_API_Unregister_verify_table);
}

static inline int cFS_API_Unregister_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &cFS_API_Unregister_verify_table);
}

static int cFS_API_ResetFilter_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_field(td, 0, 2, 2) /* EventID */)) return ret;
    return flatcc_verify_ok;
}

static inline int cFS_API_ResetFilter_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, cFS_API_ResetFilter_identifier, &cFS_API_ResetFilter_verify_table);
}

static inline int cFS_API_ResetFilter_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, cFS_API_ResetFilter_type_identifier, &cFS_API_ResetFilter_verify_table);
}

static inline int cFS_API_ResetFilter_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &cFS_API_ResetFilter_verify_table);
}

static inline int cFS_API_ResetFilter_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &cFS_API_ResetFilter_verify_table);
}

static int cFS_API_ResetAllFilters_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    return flatcc_verify_ok;
}

static inline int cFS_API_ResetAllFilters_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, cFS_API_ResetAllFilters_identifier, &cFS_API_ResetAllFilters_verify_table);
}

static inline int cFS_API_ResetAllFilters_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, cFS_API_ResetAllFilters_type_identifier, &cFS_API_ResetAllFilters_verify_table);
}

static inline int cFS_API_ResetAllFilters_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &cFS_API_ResetAllFilters_verify_table);
}

static inline int cFS_API_ResetAllFilters_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &cFS_API_ResetAllFilters_verify_table);
}

static int cFS_API_RemoteCall_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_union_field(td, 1, 0, &cFS_API_Function_union_verifier) /* input */)) return ret;
    return flatcc_verify_ok;
}

static inline int cFS_API_RemoteCall_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, cFS_API_RemoteCall_identifier, &cFS_API_RemoteCall_verify_table);
}

static inline int cFS_API_RemoteCall_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, cFS_API_RemoteCall_type_identifier, &cFS_API_RemoteCall_verify_table);
}

static inline int cFS_API_RemoteCall_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &cFS_API_RemoteCall_verify_table);
}

static inline int cFS_API_RemoteCall_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &cFS_API_RemoteCall_verify_table);
}

#include "flatcc/flatcc_epilogue.h"
#endif /* CFS_API_VERIFIER_H */
