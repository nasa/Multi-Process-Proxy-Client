#ifndef CFS_API_VERIFIER_H
#define CFS_API_VERIFIER_H

/* Generated by flatcc 0.6.0-pre FlatBuffers schema compiler for C by dvide.com */

#ifndef CFS_API_READER_H
#include "cfs_api_reader.h"
#endif
#include "flatcc/flatcc_verifier.h"
#ifndef COMMON_VERIFIER_H
#include "common_verifier.h"
#endif
#include "flatcc/flatcc_prologue.h"

static int cFS_API_RunLoop_verify_table(flatcc_table_verifier_descriptor_t *td);
static int cFS_API_PerfLogAdd_verify_table(flatcc_table_verifier_descriptor_t *td);
static int cFS_API_RegisterApp_verify_table(flatcc_table_verifier_descriptor_t *td);
static int cFS_API_ExitApp_verify_table(flatcc_table_verifier_descriptor_t *td);
static int cFS_API_SendEvent_verify_table(flatcc_table_verifier_descriptor_t *td);
static int cFS_API_SendEventWithAppID_verify_table(flatcc_table_verifier_descriptor_t *td);
static int cFS_API_SendTimedEvent_verify_table(flatcc_table_verifier_descriptor_t *td);
static int cFS_API_Filter_verify_table(flatcc_table_verifier_descriptor_t *td);
static int cFS_API_Register_verify_table(flatcc_table_verifier_descriptor_t *td);
static int cFS_API_Unregister_verify_table(flatcc_table_verifier_descriptor_t *td);
static int cFS_API_ResetFilter_verify_table(flatcc_table_verifier_descriptor_t *td);
static int cFS_API_ResetAllFilters_verify_table(flatcc_table_verifier_descriptor_t *td);
static int cFS_API_FS_Header_t_verify_table(flatcc_table_verifier_descriptor_t *td);
static int cFS_API_FS_ReadHeader_verify_table(flatcc_table_verifier_descriptor_t *td);
static int cFS_API_FS_WriteHeader_verify_table(flatcc_table_verifier_descriptor_t *td);
static int cFS_API_FS_SetTimestamp_verify_table(flatcc_table_verifier_descriptor_t *td);
static int cFS_API_FS_Decompress_verify_table(flatcc_table_verifier_descriptor_t *td);
static int cFS_API_FS_GetUncompressedFile_verify_table(flatcc_table_verifier_descriptor_t *td);
static int cFS_API_TIME_GetTime_verify_table(flatcc_table_verifier_descriptor_t *td);
static int cFS_API_TIME_GetTAI_verify_table(flatcc_table_verifier_descriptor_t *td);
static int cFS_API_TIME_GetUTC_verify_table(flatcc_table_verifier_descriptor_t *td);
static int cFS_API_TIME_MET2SCTime_verify_table(flatcc_table_verifier_descriptor_t *td);
static int cFS_API_TIME_GetSTCF_verify_table(flatcc_table_verifier_descriptor_t *td);
static int cFS_API_TIME_GetMET_verify_table(flatcc_table_verifier_descriptor_t *td);
static int cFS_API_TIME_GetMETseconds_verify_table(flatcc_table_verifier_descriptor_t *td);
static int cFS_API_TIME_GetMETsubsecs_verify_table(flatcc_table_verifier_descriptor_t *td);
static int cFS_API_TIME_GetLeapSeconds_verify_table(flatcc_table_verifier_descriptor_t *td);
static int cFS_API_TIME_GetClockState_verify_table(flatcc_table_verifier_descriptor_t *td);
static int cFS_API_TIME_GetClockInfo_verify_table(flatcc_table_verifier_descriptor_t *td);
static int cFS_API_RemoteCall_verify_table(flatcc_table_verifier_descriptor_t *td);

static int cFS_API_Function_union_verifier(flatcc_union_verifier_descriptor_t *ud)
{
    switch (ud->type) {
    case 1: return flatcc_verify_union_table(ud, cFS_API_RunLoop_verify_table); /* RunLoop */
    case 2: return flatcc_verify_union_table(ud, cFS_API_PerfLogAdd_verify_table); /* PerfLogAdd */
    case 3: return flatcc_verify_union_table(ud, cFS_API_RegisterApp_verify_table); /* RegisterApp */
    case 4: return flatcc_verify_union_table(ud, cFS_API_ExitApp_verify_table); /* ExitApp */
    case 5: return flatcc_verify_union_table(ud, cFS_API_Register_verify_table); /* Register */
    case 6: return flatcc_verify_union_table(ud, cFS_API_Unregister_verify_table); /* Unregister */
    case 7: return flatcc_verify_union_table(ud, cFS_API_SendEvent_verify_table); /* SendEvent */
    case 8: return flatcc_verify_union_table(ud, cFS_API_SendEventWithAppID_verify_table); /* SendEventWithAppID */
    case 9: return flatcc_verify_union_table(ud, cFS_API_SendTimedEvent_verify_table); /* SendTimedEvent */
    case 10: return flatcc_verify_union_table(ud, cFS_API_ResetFilter_verify_table); /* ResetFilter */
    case 11: return flatcc_verify_union_table(ud, cFS_API_ResetAllFilters_verify_table); /* ResetAllFilters */
    case 12: return flatcc_verify_union_table(ud, cFS_API_FS_ReadHeader_verify_table); /* FS_ReadHeader */
    case 13: return flatcc_verify_union_table(ud, cFS_API_FS_WriteHeader_verify_table); /* FS_WriteHeader */
    case 14: return flatcc_verify_union_table(ud, cFS_API_FS_SetTimestamp_verify_table); /* FS_SetTimestamp */
    case 15: return flatcc_verify_union_table(ud, cFS_API_FS_Decompress_verify_table); /* FS_Decompress */
    case 16: return flatcc_verify_union_table(ud, cFS_API_FS_GetUncompressedFile_verify_table); /* FS_GetUncompressedFile */
    case 17: return flatcc_verify_union_table(ud, cFS_API_TIME_GetTime_verify_table); /* TIME_GetTime */
    case 18: return flatcc_verify_union_table(ud, cFS_API_TIME_GetTAI_verify_table); /* TIME_GetTAI */
    case 19: return flatcc_verify_union_table(ud, cFS_API_TIME_GetUTC_verify_table); /* TIME_GetUTC */
    case 20: return flatcc_verify_union_table(ud, cFS_API_TIME_MET2SCTime_verify_table); /* TIME_MET2SCTime */
    case 21: return flatcc_verify_union_table(ud, cFS_API_TIME_GetSTCF_verify_table); /* TIME_GetSTCF */
    case 22: return flatcc_verify_union_table(ud, cFS_API_TIME_GetMET_verify_table); /* TIME_GetMET */
    case 23: return flatcc_verify_union_table(ud, cFS_API_TIME_GetMETseconds_verify_table); /* TIME_GetMETseconds */
    case 24: return flatcc_verify_union_table(ud, cFS_API_TIME_GetMETsubsecs_verify_table); /* TIME_GetMETsubsecs */
    case 25: return flatcc_verify_union_table(ud, cFS_API_TIME_GetLeapSeconds_verify_table); /* TIME_GetLeapSeconds */
    case 26: return flatcc_verify_union_table(ud, cFS_API_TIME_GetClockState_verify_table); /* TIME_GetClockState */
    case 27: return flatcc_verify_union_table(ud, cFS_API_TIME_GetClockInfo_verify_table); /* TIME_GetClockInfo */
    default: return flatcc_verify_ok;
    }
}

static int cFS_API_RunLoop_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_field(td, 0, 4, 4) /* ExitStatus */)) return ret;
    return flatcc_verify_ok;
}

static inline int cFS_API_RunLoop_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, cFS_API_RunLoop_identifier, &cFS_API_RunLoop_verify_table);
}

static inline int cFS_API_RunLoop_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, cFS_API_RunLoop_type_identifier, &cFS_API_RunLoop_verify_table);
}

static inline int cFS_API_RunLoop_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &cFS_API_RunLoop_verify_table);
}

static inline int cFS_API_RunLoop_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &cFS_API_RunLoop_verify_table);
}

static int cFS_API_PerfLogAdd_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_field(td, 0, 4, 4) /* Marker */)) return ret;
    if ((ret = flatcc_verify_field(td, 1, 4, 4) /* EntryExit */)) return ret;
    return flatcc_verify_ok;
}

static inline int cFS_API_PerfLogAdd_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, cFS_API_PerfLogAdd_identifier, &cFS_API_PerfLogAdd_verify_table);
}

static inline int cFS_API_PerfLogAdd_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, cFS_API_PerfLogAdd_type_identifier, &cFS_API_PerfLogAdd_verify_table);
}

static inline int cFS_API_PerfLogAdd_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &cFS_API_PerfLogAdd_verify_table);
}

static inline int cFS_API_PerfLogAdd_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &cFS_API_PerfLogAdd_verify_table);
}

static int cFS_API_RegisterApp_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    return flatcc_verify_ok;
}

static inline int cFS_API_RegisterApp_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, cFS_API_RegisterApp_identifier, &cFS_API_RegisterApp_verify_table);
}

static inline int cFS_API_RegisterApp_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, cFS_API_RegisterApp_type_identifier, &cFS_API_RegisterApp_verify_table);
}

static inline int cFS_API_RegisterApp_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &cFS_API_RegisterApp_verify_table);
}

static inline int cFS_API_RegisterApp_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &cFS_API_RegisterApp_verify_table);
}

static int cFS_API_ExitApp_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_field(td, 0, 4, 4) /* ExitStatus */)) return ret;
    return flatcc_verify_ok;
}

static inline int cFS_API_ExitApp_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, cFS_API_ExitApp_identifier, &cFS_API_ExitApp_verify_table);
}

static inline int cFS_API_ExitApp_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, cFS_API_ExitApp_type_identifier, &cFS_API_ExitApp_verify_table);
}

static inline int cFS_API_ExitApp_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &cFS_API_ExitApp_verify_table);
}

static inline int cFS_API_ExitApp_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &cFS_API_ExitApp_verify_table);
}

static int cFS_API_SendEvent_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_field(td, 0, 2, 2) /* EventID */)) return ret;
    if ((ret = flatcc_verify_field(td, 1, 2, 2) /* EventType */)) return ret;
    if ((ret = flatcc_verify_string_field(td, 2, 0) /* Spec */)) return ret;
    return flatcc_verify_ok;
}

static inline int cFS_API_SendEvent_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, cFS_API_SendEvent_identifier, &cFS_API_SendEvent_verify_table);
}

static inline int cFS_API_SendEvent_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, cFS_API_SendEvent_type_identifier, &cFS_API_SendEvent_verify_table);
}

static inline int cFS_API_SendEvent_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &cFS_API_SendEvent_verify_table);
}

static inline int cFS_API_SendEvent_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &cFS_API_SendEvent_verify_table);
}

static int cFS_API_SendEventWithAppID_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_field(td, 0, 2, 2) /* EventID */)) return ret;
    if ((ret = flatcc_verify_field(td, 1, 2, 2) /* EventType */)) return ret;
    if ((ret = flatcc_verify_field(td, 2, 4, 4) /* AppID */)) return ret;
    if ((ret = flatcc_verify_string_field(td, 3, 0) /* Spec */)) return ret;
    return flatcc_verify_ok;
}

static inline int cFS_API_SendEventWithAppID_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, cFS_API_SendEventWithAppID_identifier, &cFS_API_SendEventWithAppID_verify_table);
}

static inline int cFS_API_SendEventWithAppID_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, cFS_API_SendEventWithAppID_type_identifier, &cFS_API_SendEventWithAppID_verify_table);
}

static inline int cFS_API_SendEventWithAppID_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &cFS_API_SendEventWithAppID_verify_table);
}

static inline int cFS_API_SendEventWithAppID_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &cFS_API_SendEventWithAppID_verify_table);
}

static int cFS_API_SendTimedEvent_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_table_field(td, 0, 0, &cFETime_verify_table) /* Time */)) return ret;
    if ((ret = flatcc_verify_field(td, 1, 2, 2) /* EventID */)) return ret;
    if ((ret = flatcc_verify_field(td, 2, 2, 2) /* EventType */)) return ret;
    if ((ret = flatcc_verify_string_field(td, 3, 0) /* Spec */)) return ret;
    return flatcc_verify_ok;
}

static inline int cFS_API_SendTimedEvent_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, cFS_API_SendTimedEvent_identifier, &cFS_API_SendTimedEvent_verify_table);
}

static inline int cFS_API_SendTimedEvent_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, cFS_API_SendTimedEvent_type_identifier, &cFS_API_SendTimedEvent_verify_table);
}

static inline int cFS_API_SendTimedEvent_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &cFS_API_SendTimedEvent_verify_table);
}

static inline int cFS_API_SendTimedEvent_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &cFS_API_SendTimedEvent_verify_table);
}

static int cFS_API_Filter_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_field(td, 0, 2, 2) /* EventID */)) return ret;
    if ((ret = flatcc_verify_field(td, 1, 2, 2) /* Mask */)) return ret;
    return flatcc_verify_ok;
}

static inline int cFS_API_Filter_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, cFS_API_Filter_identifier, &cFS_API_Filter_verify_table);
}

static inline int cFS_API_Filter_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, cFS_API_Filter_type_identifier, &cFS_API_Filter_verify_table);
}

static inline int cFS_API_Filter_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &cFS_API_Filter_verify_table);
}

static inline int cFS_API_Filter_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &cFS_API_Filter_verify_table);
}

static int cFS_API_Register_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_table_vector_field(td, 0, 0, &cFS_API_Filter_verify_table) /* Filters */)) return ret;
    if ((ret = flatcc_verify_field(td, 1, 2, 2) /* NumFilteredEvents */)) return ret;
    if ((ret = flatcc_verify_field(td, 2, 2, 2) /* FilterScheme */)) return ret;
    return flatcc_verify_ok;
}

static inline int cFS_API_Register_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, cFS_API_Register_identifier, &cFS_API_Register_verify_table);
}

static inline int cFS_API_Register_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, cFS_API_Register_type_identifier, &cFS_API_Register_verify_table);
}

static inline int cFS_API_Register_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &cFS_API_Register_verify_table);
}

static inline int cFS_API_Register_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &cFS_API_Register_verify_table);
}

static int cFS_API_Unregister_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    return flatcc_verify_ok;
}

static inline int cFS_API_Unregister_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, cFS_API_Unregister_identifier, &cFS_API_Unregister_verify_table);
}

static inline int cFS_API_Unregister_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, cFS_API_Unregister_type_identifier, &cFS_API_Unregister_verify_table);
}

static inline int cFS_API_Unregister_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &cFS_API_Unregister_verify_table);
}

static inline int cFS_API_Unregister_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &cFS_API_Unregister_verify_table);
}

static int cFS_API_ResetFilter_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_field(td, 0, 2, 2) /* EventID */)) return ret;
    return flatcc_verify_ok;
}

static inline int cFS_API_ResetFilter_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, cFS_API_ResetFilter_identifier, &cFS_API_ResetFilter_verify_table);
}

static inline int cFS_API_ResetFilter_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, cFS_API_ResetFilter_type_identifier, &cFS_API_ResetFilter_verify_table);
}

static inline int cFS_API_ResetFilter_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &cFS_API_ResetFilter_verify_table);
}

static inline int cFS_API_ResetFilter_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &cFS_API_ResetFilter_verify_table);
}

static int cFS_API_ResetAllFilters_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    return flatcc_verify_ok;
}

static inline int cFS_API_ResetAllFilters_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, cFS_API_ResetAllFilters_identifier, &cFS_API_ResetAllFilters_verify_table);
}

static inline int cFS_API_ResetAllFilters_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, cFS_API_ResetAllFilters_type_identifier, &cFS_API_ResetAllFilters_verify_table);
}

static inline int cFS_API_ResetAllFilters_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &cFS_API_ResetAllFilters_verify_table);
}

static inline int cFS_API_ResetAllFilters_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &cFS_API_ResetAllFilters_verify_table);
}

static int cFS_API_FS_Header_t_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_field(td, 0, 4, 4) /* ContentType */)) return ret;
    if ((ret = flatcc_verify_field(td, 1, 4, 4) /* SubType */)) return ret;
    if ((ret = flatcc_verify_field(td, 2, 4, 4) /* Length */)) return ret;
    if ((ret = flatcc_verify_field(td, 3, 4, 4) /* SpacecraftID */)) return ret;
    if ((ret = flatcc_verify_field(td, 4, 4, 4) /* ProcessorID */)) return ret;
    if ((ret = flatcc_verify_field(td, 5, 4, 4) /* ApplicationID */)) return ret;
    if ((ret = flatcc_verify_field(td, 6, 4, 4) /* TimeSeconds */)) return ret;
    if ((ret = flatcc_verify_field(td, 7, 4, 4) /* TimeSubSeconds */)) return ret;
    if ((ret = flatcc_verify_string_field(td, 8, 0) /* Description */)) return ret;
    return flatcc_verify_ok;
}

static inline int cFS_API_FS_Header_t_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, cFS_API_FS_Header_t_identifier, &cFS_API_FS_Header_t_verify_table);
}

static inline int cFS_API_FS_Header_t_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, cFS_API_FS_Header_t_type_identifier, &cFS_API_FS_Header_t_verify_table);
}

static inline int cFS_API_FS_Header_t_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &cFS_API_FS_Header_t_verify_table);
}

static inline int cFS_API_FS_Header_t_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &cFS_API_FS_Header_t_verify_table);
}

static int cFS_API_FS_ReadHeader_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_table_field(td, 0, 0, &cFS_API_FS_Header_t_verify_table) /* Hdr */)) return ret;
    if ((ret = flatcc_verify_field(td, 1, 4, 4) /* FileDes */)) return ret;
    return flatcc_verify_ok;
}

static inline int cFS_API_FS_ReadHeader_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, cFS_API_FS_ReadHeader_identifier, &cFS_API_FS_ReadHeader_verify_table);
}

static inline int cFS_API_FS_ReadHeader_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, cFS_API_FS_ReadHeader_type_identifier, &cFS_API_FS_ReadHeader_verify_table);
}

static inline int cFS_API_FS_ReadHeader_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &cFS_API_FS_ReadHeader_verify_table);
}

static inline int cFS_API_FS_ReadHeader_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &cFS_API_FS_ReadHeader_verify_table);
}

static int cFS_API_FS_WriteHeader_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_field(td, 0, 4, 4) /* FileDes */)) return ret;
    if ((ret = flatcc_verify_table_field(td, 1, 0, &cFS_API_FS_Header_t_verify_table) /* Hdr */)) return ret;
    return flatcc_verify_ok;
}

static inline int cFS_API_FS_WriteHeader_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, cFS_API_FS_WriteHeader_identifier, &cFS_API_FS_WriteHeader_verify_table);
}

static inline int cFS_API_FS_WriteHeader_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, cFS_API_FS_WriteHeader_type_identifier, &cFS_API_FS_WriteHeader_verify_table);
}

static inline int cFS_API_FS_WriteHeader_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &cFS_API_FS_WriteHeader_verify_table);
}

static inline int cFS_API_FS_WriteHeader_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &cFS_API_FS_WriteHeader_verify_table);
}

static int cFS_API_FS_SetTimestamp_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_field(td, 0, 4, 4) /* FileDes */)) return ret;
    if ((ret = flatcc_verify_table_field(td, 1, 0, &cFETime_verify_table) /* NewTimestamp */)) return ret;
    return flatcc_verify_ok;
}

static inline int cFS_API_FS_SetTimestamp_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, cFS_API_FS_SetTimestamp_identifier, &cFS_API_FS_SetTimestamp_verify_table);
}

static inline int cFS_API_FS_SetTimestamp_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, cFS_API_FS_SetTimestamp_type_identifier, &cFS_API_FS_SetTimestamp_verify_table);
}

static inline int cFS_API_FS_SetTimestamp_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &cFS_API_FS_SetTimestamp_verify_table);
}

static inline int cFS_API_FS_SetTimestamp_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &cFS_API_FS_SetTimestamp_verify_table);
}

static int cFS_API_FS_Decompress_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_string_field(td, 0, 0) /* SourceFile */)) return ret;
    if ((ret = flatcc_verify_string_field(td, 1, 0) /* DestinationFile */)) return ret;
    return flatcc_verify_ok;
}

static inline int cFS_API_FS_Decompress_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, cFS_API_FS_Decompress_identifier, &cFS_API_FS_Decompress_verify_table);
}

static inline int cFS_API_FS_Decompress_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, cFS_API_FS_Decompress_type_identifier, &cFS_API_FS_Decompress_verify_table);
}

static inline int cFS_API_FS_Decompress_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &cFS_API_FS_Decompress_verify_table);
}

static inline int cFS_API_FS_Decompress_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &cFS_API_FS_Decompress_verify_table);
}

static int cFS_API_FS_GetUncompressedFile_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_string_field(td, 0, 0) /* OutputNameBuffer */)) return ret;
    if ((ret = flatcc_verify_field(td, 1, 4, 4) /* OutputNameBufferSize */)) return ret;
    if ((ret = flatcc_verify_string_field(td, 2, 0) /* GzipFileName */)) return ret;
    if ((ret = flatcc_verify_string_field(td, 3, 0) /* TempDir */)) return ret;
    return flatcc_verify_ok;
}

static inline int cFS_API_FS_GetUncompressedFile_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, cFS_API_FS_GetUncompressedFile_identifier, &cFS_API_FS_GetUncompressedFile_verify_table);
}

static inline int cFS_API_FS_GetUncompressedFile_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, cFS_API_FS_GetUncompressedFile_type_identifier, &cFS_API_FS_GetUncompressedFile_verify_table);
}

static inline int cFS_API_FS_GetUncompressedFile_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &cFS_API_FS_GetUncompressedFile_verify_table);
}

static inline int cFS_API_FS_GetUncompressedFile_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &cFS_API_FS_GetUncompressedFile_verify_table);
}

static int cFS_API_TIME_GetTime_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    return flatcc_verify_ok;
}

static inline int cFS_API_TIME_GetTime_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, cFS_API_TIME_GetTime_identifier, &cFS_API_TIME_GetTime_verify_table);
}

static inline int cFS_API_TIME_GetTime_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, cFS_API_TIME_GetTime_type_identifier, &cFS_API_TIME_GetTime_verify_table);
}

static inline int cFS_API_TIME_GetTime_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &cFS_API_TIME_GetTime_verify_table);
}

static inline int cFS_API_TIME_GetTime_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &cFS_API_TIME_GetTime_verify_table);
}

static int cFS_API_TIME_GetTAI_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    return flatcc_verify_ok;
}

static inline int cFS_API_TIME_GetTAI_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, cFS_API_TIME_GetTAI_identifier, &cFS_API_TIME_GetTAI_verify_table);
}

static inline int cFS_API_TIME_GetTAI_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, cFS_API_TIME_GetTAI_type_identifier, &cFS_API_TIME_GetTAI_verify_table);
}

static inline int cFS_API_TIME_GetTAI_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &cFS_API_TIME_GetTAI_verify_table);
}

static inline int cFS_API_TIME_GetTAI_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &cFS_API_TIME_GetTAI_verify_table);
}

static int cFS_API_TIME_GetUTC_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    return flatcc_verify_ok;
}

static inline int cFS_API_TIME_GetUTC_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, cFS_API_TIME_GetUTC_identifier, &cFS_API_TIME_GetUTC_verify_table);
}

static inline int cFS_API_TIME_GetUTC_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, cFS_API_TIME_GetUTC_type_identifier, &cFS_API_TIME_GetUTC_verify_table);
}

static inline int cFS_API_TIME_GetUTC_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &cFS_API_TIME_GetUTC_verify_table);
}

static inline int cFS_API_TIME_GetUTC_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &cFS_API_TIME_GetUTC_verify_table);
}

static int cFS_API_TIME_MET2SCTime_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_table_field(td, 0, 0, &cFETime_verify_table) /* METTime */)) return ret;
    return flatcc_verify_ok;
}

static inline int cFS_API_TIME_MET2SCTime_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, cFS_API_TIME_MET2SCTime_identifier, &cFS_API_TIME_MET2SCTime_verify_table);
}

static inline int cFS_API_TIME_MET2SCTime_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, cFS_API_TIME_MET2SCTime_type_identifier, &cFS_API_TIME_MET2SCTime_verify_table);
}

static inline int cFS_API_TIME_MET2SCTime_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &cFS_API_TIME_MET2SCTime_verify_table);
}

static inline int cFS_API_TIME_MET2SCTime_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &cFS_API_TIME_MET2SCTime_verify_table);
}

static int cFS_API_TIME_GetSTCF_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    return flatcc_verify_ok;
}

static inline int cFS_API_TIME_GetSTCF_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, cFS_API_TIME_GetSTCF_identifier, &cFS_API_TIME_GetSTCF_verify_table);
}

static inline int cFS_API_TIME_GetSTCF_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, cFS_API_TIME_GetSTCF_type_identifier, &cFS_API_TIME_GetSTCF_verify_table);
}

static inline int cFS_API_TIME_GetSTCF_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &cFS_API_TIME_GetSTCF_verify_table);
}

static inline int cFS_API_TIME_GetSTCF_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &cFS_API_TIME_GetSTCF_verify_table);
}

static int cFS_API_TIME_GetMET_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    return flatcc_verify_ok;
}

static inline int cFS_API_TIME_GetMET_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, cFS_API_TIME_GetMET_identifier, &cFS_API_TIME_GetMET_verify_table);
}

static inline int cFS_API_TIME_GetMET_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, cFS_API_TIME_GetMET_type_identifier, &cFS_API_TIME_GetMET_verify_table);
}

static inline int cFS_API_TIME_GetMET_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &cFS_API_TIME_GetMET_verify_table);
}

static inline int cFS_API_TIME_GetMET_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &cFS_API_TIME_GetMET_verify_table);
}

static int cFS_API_TIME_GetMETseconds_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    return flatcc_verify_ok;
}

static inline int cFS_API_TIME_GetMETseconds_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, cFS_API_TIME_GetMETseconds_identifier, &cFS_API_TIME_GetMETseconds_verify_table);
}

static inline int cFS_API_TIME_GetMETseconds_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, cFS_API_TIME_GetMETseconds_type_identifier, &cFS_API_TIME_GetMETseconds_verify_table);
}

static inline int cFS_API_TIME_GetMETseconds_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &cFS_API_TIME_GetMETseconds_verify_table);
}

static inline int cFS_API_TIME_GetMETseconds_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &cFS_API_TIME_GetMETseconds_verify_table);
}

static int cFS_API_TIME_GetMETsubsecs_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    return flatcc_verify_ok;
}

static inline int cFS_API_TIME_GetMETsubsecs_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, cFS_API_TIME_GetMETsubsecs_identifier, &cFS_API_TIME_GetMETsubsecs_verify_table);
}

static inline int cFS_API_TIME_GetMETsubsecs_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, cFS_API_TIME_GetMETsubsecs_type_identifier, &cFS_API_TIME_GetMETsubsecs_verify_table);
}

static inline int cFS_API_TIME_GetMETsubsecs_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &cFS_API_TIME_GetMETsubsecs_verify_table);
}

static inline int cFS_API_TIME_GetMETsubsecs_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &cFS_API_TIME_GetMETsubsecs_verify_table);
}

static int cFS_API_TIME_GetLeapSeconds_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    return flatcc_verify_ok;
}

static inline int cFS_API_TIME_GetLeapSeconds_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, cFS_API_TIME_GetLeapSeconds_identifier, &cFS_API_TIME_GetLeapSeconds_verify_table);
}

static inline int cFS_API_TIME_GetLeapSeconds_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, cFS_API_TIME_GetLeapSeconds_type_identifier, &cFS_API_TIME_GetLeapSeconds_verify_table);
}

static inline int cFS_API_TIME_GetLeapSeconds_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &cFS_API_TIME_GetLeapSeconds_verify_table);
}

static inline int cFS_API_TIME_GetLeapSeconds_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &cFS_API_TIME_GetLeapSeconds_verify_table);
}

static int cFS_API_TIME_GetClockState_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    return flatcc_verify_ok;
}

static inline int cFS_API_TIME_GetClockState_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, cFS_API_TIME_GetClockState_identifier, &cFS_API_TIME_GetClockState_verify_table);
}

static inline int cFS_API_TIME_GetClockState_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, cFS_API_TIME_GetClockState_type_identifier, &cFS_API_TIME_GetClockState_verify_table);
}

static inline int cFS_API_TIME_GetClockState_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &cFS_API_TIME_GetClockState_verify_table);
}

static inline int cFS_API_TIME_GetClockState_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &cFS_API_TIME_GetClockState_verify_table);
}

static int cFS_API_TIME_GetClockInfo_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    return flatcc_verify_ok;
}

static inline int cFS_API_TIME_GetClockInfo_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, cFS_API_TIME_GetClockInfo_identifier, &cFS_API_TIME_GetClockInfo_verify_table);
}

static inline int cFS_API_TIME_GetClockInfo_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, cFS_API_TIME_GetClockInfo_type_identifier, &cFS_API_TIME_GetClockInfo_verify_table);
}

static inline int cFS_API_TIME_GetClockInfo_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &cFS_API_TIME_GetClockInfo_verify_table);
}

static inline int cFS_API_TIME_GetClockInfo_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &cFS_API_TIME_GetClockInfo_verify_table);
}

static int cFS_API_RemoteCall_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_union_field(td, 1, 0, &cFS_API_Function_union_verifier) /* input */)) return ret;
    return flatcc_verify_ok;
}

static inline int cFS_API_RemoteCall_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, cFS_API_RemoteCall_identifier, &cFS_API_RemoteCall_verify_table);
}

static inline int cFS_API_RemoteCall_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, cFS_API_RemoteCall_type_identifier, &cFS_API_RemoteCall_verify_table);
}

static inline int cFS_API_RemoteCall_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &cFS_API_RemoteCall_verify_table);
}

static inline int cFS_API_RemoteCall_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &cFS_API_RemoteCall_verify_table);
}

#include "flatcc/flatcc_epilogue.h"
#endif /* CFS_API_VERIFIER_H */
