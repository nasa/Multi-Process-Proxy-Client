#ifndef COMMON_BUILDER_H
#define COMMON_BUILDER_H

/* Generated by flatcc 0.6.0-pre FlatBuffers schema compiler for C by dvide.com */

#ifndef COMMON_READER_H
#include "common_reader.h"
#endif
#ifndef FLATBUFFERS_COMMON_BUILDER_H
#include "flatbuffers_common_builder.h"
#endif
#include "flatcc/flatcc_prologue.h"
#ifndef flatbuffers_identifier
#define flatbuffers_identifier 0
#endif
#ifndef flatbuffers_extension
#define flatbuffers_extension ".bin"
#endif

static const flatbuffers_voffset_t __cFETime_required[] = { 0 };
typedef flatbuffers_ref_t cFETime_ref_t;
static cFETime_ref_t cFETime_clone(flatbuffers_builder_t *B, cFETime_table_t t);
__flatbuffers_build_table(flatbuffers_, cFETime, 2)

#define __cFETime_formal_args , uint32_t v0, uint32_t v1
#define __cFETime_call_args , v0, v1
static inline cFETime_ref_t cFETime_create(flatbuffers_builder_t *B __cFETime_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, cFETime, cFETime_identifier, cFETime_type_identifier)

__flatbuffers_build_scalar_field(0, flatbuffers_, cFETime_Seconds, flatbuffers_uint32, uint32_t, 4, 4, UINT32_C(0), cFETime)
__flatbuffers_build_scalar_field(1, flatbuffers_, cFETime_Subseconds, flatbuffers_uint32, uint32_t, 4, 4, UINT32_C(0), cFETime)

static inline cFETime_ref_t cFETime_create(flatbuffers_builder_t *B __cFETime_formal_args)
{
    if (cFETime_start(B)
        || cFETime_Seconds_add(B, v0)
        || cFETime_Subseconds_add(B, v1)) {
        return 0;
    }
    return cFETime_end(B);
}

static cFETime_ref_t cFETime_clone(flatbuffers_builder_t *B, cFETime_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (cFETime_start(B)
        || cFETime_Seconds_pick(B, t)
        || cFETime_Subseconds_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, cFETime_end(B));
}

#include "flatcc/flatcc_epilogue.h"
#endif /* COMMON_BUILDER_H */
