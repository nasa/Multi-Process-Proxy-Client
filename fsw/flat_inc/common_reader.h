#ifndef COMMON_READER_H
#define COMMON_READER_H

/* Generated by flatcc 0.6.0-pre FlatBuffers schema compiler for C by dvide.com */

#ifndef FLATBUFFERS_COMMON_READER_H
#include "flatbuffers_common_reader.h"
#endif
#include "flatcc/flatcc_flatbuffers.h"
#ifndef __alignas_is_defined
#include <stdalign.h>
#endif
#include "flatcc/flatcc_prologue.h"
#ifndef flatbuffers_identifier
#define flatbuffers_identifier 0
#endif
#ifndef flatbuffers_extension
#define flatbuffers_extension ".bin"
#endif


typedef const struct cFETime_table *cFETime_table_t;
typedef struct cFETime_table *cFETime_mutable_table_t;
typedef const flatbuffers_uoffset_t *cFETime_vec_t;
typedef flatbuffers_uoffset_t *cFETime_mutable_vec_t;
#ifndef cFETime_identifier
#define cFETime_identifier flatbuffers_identifier
#endif
#define cFETime_type_hash ((flatbuffers_thash_t)0xc625f512)
#define cFETime_type_identifier "\x12\xf5\x25\xc6"



/** ///////////////////////////////////////////////// */
struct cFETime_table { uint8_t unused__; };

static inline size_t cFETime_vec_len(cFETime_vec_t vec)
__flatbuffers_vec_len(vec)
static inline cFETime_table_t cFETime_vec_at(cFETime_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(cFETime_table_t, vec, i, 0)
__flatbuffers_table_as_root(cFETime)

__flatbuffers_define_scalar_field(0, cFETime, Seconds, flatbuffers_uint32, uint32_t, UINT32_C(0))
__flatbuffers_define_scalar_field(1, cFETime, Subseconds, flatbuffers_uint32, uint32_t, UINT32_C(0))


#include "flatcc/flatcc_epilogue.h"
#endif /* COMMON_READER_H */
