include "common.fbs";

namespace cFS_API;

////////////////////////////////////////////////////
// ES Functions
table RunLoop {
    ExitStatus:uint32; // A pointer
}

// ES Performance Log API
table PerfLogAdd {
    Marker:uint32;
    EntryExit:uint32;
}

// ES
table RegisterApp { // return int32
    // No arguments
}

table ExitApp { // void return
    ExitStatus:uint32; // Not a pointer
}

////////////////////////////////////////////////////
// EVS Functions
table SendEvent {
    EventID:uint16;
    EventType:uint16;
    Spec:string;
}

table SendEventWithAppID {
    EventID:uint16;
    EventType:uint16;
    AppID:uint32;
    Spec:string;
}

table SendTimedEvent { // return int32
    Time:cFETime;
    EventID:uint16;
    EventType:uint16;
    Spec:string;
}

table Filter {
    EventID:uint16;
    Mask:uint16;
}

table Register {
    Filters:[Filter];
    NumFilteredEvents:uint16;
    FilterScheme:uint16;
}

table Unregister { // return int32
    // no arguments
}

table ResetFilter { // return int32
    EventID:int16;
}

table ResetAllFilters { // return int32
    // no arguments
}

////////////////////////////////////////////////////
// FS Data Types
table FS_Header_t {
    ContentType:uint32;
    SubType:uint32;
    Length:uint32;
    SpacecraftID:uint32;
    ProcessorID:uint32;
    ApplicationID:uint32;
    TimeSeconds:uint32;
    TimeSubSeconds:uint32;
    Description:string;
}

// FS Functions
table FS_ReadHeader { // return int32
    Hdr:FS_Header_t; // pointer
    FileDes:int32;
}

table FS_WriteHeader { // return int32
    FileDes:int32;
    Hdr:FS_Header_t; // pointer
}

table FS_SetTimestamp { // return int32
    FileDes:int32;
    NewTimestamp:cFETime;
}

table FS_Decompress { // return int32
     SourceFile:string;
     DestinationFile:string;
}

table FS_GetUncompressedFile { // return int32
    OutputNameBuffer:string;
    OutputNameBufferSize:uint32;
    GzipFileName:string;
    TempDir:string;
}

////////////////////////////////////////////////////
// SB Functions are likely all handled by SBN-Client

////////////////////////////////////////////////////
// TIME Functions
table TIME_GetTime { // return CFE_TIME_SysTime_t
    // no arguments
}

table TIME_GetTAI { // return CFE_TIME_SysTime_t
    // no arguments
}

table TIME_GetUTC { // return CFE_TIME_SysTime_t
    // no arguments
}

table TIME_MET2SCTime { // return CFE_TIME_SysTime_t
    METTime:cFETime;
}

table TIME_GetSTCF { // return CFE_TIME_SysTime_t
    // no arguments
}

table TIME_GetMET { // return CFE_TIME_SysTime_t
    // no arguments
}

table TIME_GetMETseconds { // return uint32
    // no arguments
}

table TIME_GetMETsubsecs { // return uint32
    // no arguments
}

table TIME_GetLeapSeconds { // return int16
    // no arguments
}

table TIME_GetClockState { // return CFE_TIME_ClockState_Enum_t
    // no arguments
}

table TIME_GetClockInfo { // return uint16
    // no arguments
}

////////////////////////////////////////////////////
// TBL Functions

////////////////////////////////////////////////////
union Function {
    // ES Functions
    RunLoop,
    PerfLogAdd,
    RegisterApp,
    ExitApp,

    // EVS Functions
    Register,
    Unregister,
    SendEvent,
    SendEventWithAppID,
    SendTimedEvent,
    ResetFilter,
    ResetAllFilters,

    // FS Functions
    FS_ReadHeader,
    FS_WriteHeader,
    FS_SetTimestamp,
    FS_Decompress,
    FS_GetUncompressedFile,

    // SB Functions are likely all handled by SBN-Client

    // TIME Functions
    TIME_GetTime,
    TIME_GetTAI,
    TIME_GetUTC,
    TIME_MET2SCTime,
    TIME_GetSTCF,
    TIME_GetMET,
    TIME_GetMETseconds,
    TIME_GetMETsubsecs,
    TIME_GetLeapSeconds,
    TIME_GetClockState,
    TIME_GetClockInfo

    // TBL Functions
}

// Unions may not be the root_type (since it is actually two fields)
table RemoteCall {
    input:Function;
}

root_type RemoteCall;
